<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>学习笔记 DSU on tree(树上启发式合并)</title>
    <url>/2019/11/01/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-DSU-on-tree-%E6%A0%91%E4%B8%8A%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/</url>
    <content><![CDATA[<p>树上启发式合并（DSU on Tree）用于解决一类离线的、询问子树信息的问题，它拥有 $\mathcal{O} (n \log n)$ 的优秀时间复杂度，并且常数小，实现难度低。</p>
<a id="more"></a>

<p>本文将结合例题介绍 DSU on tree 的基本实现方法。</p>
<blockquote>
<h2 id="CF600E-Lomsat-gelral"><a href="#CF600E-Lomsat-gelral" class="headerlink" title="CF600E Lomsat gelral"></a>CF600E Lomsat gelral</h2></blockquote>
<p><strong>题意：给定一棵大小为 $n(n \le 10 ^ 5)$ 的树，每个节点有一个颜色，求每个子树中出现次数最多的颜色编号之和</strong>。</p>
<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>如果 $n \le 10 ^ 3$，那我们怎么做？<del>当然是暴力啦</del></p>
<p>考虑暴力，我们对于每个点，遍历其子树并统计颜色，这样的复杂度是 $\mathcal{O} (n ^ 2)$ 的，瓶颈在于每次进入不同子树时都要重新统计，导致很多信息重复计算。当然我们可以使用线段树合并将其优化到 $\mathcal{O} (n \log n)$，不过<del>线段树写起来比较麻烦</del>，且空间复杂度也比较大。而 DSU on tree 可以在同样的时间复杂度下以 $O(n)$ 的空间复杂度解决这个问题。</p>
<p>前面说了，暴力的瓶颈在于信息的重复统计，如果我们能将子节点的一部分信息带到父节点那就很好了。不难发现，对于一个点最后一个进入的子节点，其信息我们可以保留；换句话说，这最后一个子节点重新统计的时间我们可以省下。我们要做的当然是取统计起来最耗时间的子节点作为最后一个点统计。这是什么？<strong>重儿子</strong>，也就是 $\text{size}$ 最大的儿子。</p>
<p>这样做的复杂度是多少？可以证明是 $\mathcal {O} (n \log n)$，因为没有看过详细严谨的证明，这里只提出一个口胡证法放在文末。</p>
<p>有了复杂度的保证后，我们便可以用这样一个 “优雅的暴力” 通过此题，这就是 DSU on tree。</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">int</span> n, c[N + <span class="number">5</span>], f[N + <span class="number">5</span>], siz[N + <span class="number">5</span>], son[N + <span class="number">5</span>], cnt[N + <span class="number">5</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> maxcnt, sum, ans[N + <span class="number">5</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[N + <span class="number">5</span>];</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; E[N + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs1</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa)</span> </span>&#123;</span><br><span class="line">	f[u] = fa, siz[u] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">int</span> &amp;v : E[u]) &#123;</span><br><span class="line">		<span class="keyword">if</span> (v == fa) <span class="keyword">continue</span>;</span><br><span class="line">		Dfs1(v, u);</span><br><span class="line">		siz[u] += siz[v];</span><br><span class="line">		<span class="keyword">if</span> (siz[v] &gt; siz[son[u]]) son[u] = v;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">	cnt[c[u]] += val;</span><br><span class="line">	<span class="keyword">if</span> (val &gt; <span class="number">0</span> &amp;&amp; cnt[c[u]] &gt;= maxcnt) &#123;</span><br><span class="line">		<span class="keyword">if</span> (cnt[c[u]] &gt; maxcnt) maxcnt = cnt[c[u]], sum = c[u];</span><br><span class="line">		<span class="keyword">else</span> sum += c[u];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">int</span> &amp;v : E[u])</span><br><span class="line">		<span class="keyword">if</span> (v != f[u] &amp;&amp; !vis[v])</span><br><span class="line">			Update(v, val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs2</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">bool</span> heavy)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">int</span> &amp;v : E[u])</span><br><span class="line">		<span class="keyword">if</span> (v != f[u] &amp;&amp; v != son[u])</span><br><span class="line">			Dfs2(v, <span class="literal">false</span>);</span><br><span class="line">	<span class="keyword">if</span> (son[u] != <span class="number">0</span>) &#123;</span><br><span class="line">		Dfs2(son[u], <span class="literal">true</span>);</span><br><span class="line">		vis[son[u]] = <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	Update(u, <span class="number">1</span>);</span><br><span class="line">	ans[u] = sum;</span><br><span class="line">	<span class="keyword">if</span> (son[u] != <span class="number">0</span>) vis[son[u]] = <span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">if</span> (heavy == <span class="literal">false</span>) Update(u, <span class="number">-1</span>), maxcnt = sum = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;c[i]);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, u, v; i &lt; n; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">		E[u].push_back(v);</span><br><span class="line">		E[v].push_back(u);</span><br><span class="line">	&#125;</span><br><span class="line">	Dfs1(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">	Dfs2(<span class="number">1</span>, <span class="literal">false</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">printf</span>(<span class="string">"%lld%c"</span>, ans[i], <span class="string">" \n"</span>[i == n]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<h2 id="CF208E-Blood-Cousins"><a href="#CF208E-Blood-Cousins" class="headerlink" title="CF208E Blood Cousins"></a>CF208E Blood Cousins</h2></blockquote>
<p><strong>题意：给你一片森林，每次询问一个点与多少个点拥有共同的 K 级祖先</strong></p>
<h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><p>这题没有强制在线，我们可以将询问离线，用类似上一题的办法解决。由于一个点的 $K$ 级祖先是一定的，我们将原问题转化为：询问一个点的子树中有多少个点的深度为 $d + K$，其中 $d$ 为 $K$ 级祖先的深度。</p>
<p>这不就是裸题了吗？对于每个深度开一个桶统计即可。</p>
<h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, f[N + <span class="number">5</span>][<span class="number">22</span>], son[N + <span class="number">5</span>], sz[N + <span class="number">5</span>], ans[N + <span class="number">5</span>], cnt[N + <span class="number">5</span>], dep[N + <span class="number">5</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[N + <span class="number">5</span>];</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; rt, E[N + <span class="number">5</span>];</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; Q[N + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs1</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">	sz[u] = <span class="number">1</span>;</span><br><span class="line">	dep[u] = dep[f[u][<span class="number">0</span>]] + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">20</span>; ++i)</span><br><span class="line">		f[u][i] = f[f[u][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">int</span> &amp;v : E[u]) &#123;</span><br><span class="line">		Dfs1(v);</span><br><span class="line">		sz[u] += sz[v];</span><br><span class="line">		<span class="keyword">if</span> (sz[v] &gt; sz[son[u]]) son[u] = v;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">	cnt[dep[u]] += val;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">int</span> &amp;v : E[u])</span><br><span class="line">		<span class="keyword">if</span> (!vis[v])</span><br><span class="line">			Update(v, val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs2</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">bool</span> heavy)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">int</span> &amp;v : E[u])</span><br><span class="line">		<span class="keyword">if</span> (v != son[u])</span><br><span class="line">			Dfs2(v, <span class="literal">false</span>);</span><br><span class="line">	<span class="keyword">if</span> (son[u] != <span class="number">0</span>) &#123;</span><br><span class="line">		Dfs2(son[u], <span class="literal">true</span>);</span><br><span class="line">		vis[son[u]] = <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	Update(u, <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;p : Q[u])</span><br><span class="line">		ans[p.second] = cnt[dep[u] + p.first] - <span class="number">1</span>;</span><br><span class="line">	vis[son[u]] = <span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">if</span> (!heavy)</span><br><span class="line">		Update(u, <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;f[i][<span class="number">0</span>]);</span><br><span class="line">		<span class="keyword">if</span> (!f[i][<span class="number">0</span>]) rt.push_back(i);</span><br><span class="line">		<span class="keyword">else</span> E[f[i][<span class="number">0</span>]].push_back(i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">int</span> &amp;u : rt)</span><br><span class="line">		Dfs1(u);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, u, k; i &lt;= m; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;k);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">20</span>; j &gt;= <span class="number">0</span>; --j)</span><br><span class="line">			<span class="keyword">if</span> ((k &gt;&gt; j) &amp; <span class="number">1</span>)</span><br><span class="line">				u = f[u][j];</span><br><span class="line">		Q[u].push_back(<span class="built_in">std</span>::make_pair(k, i));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">int</span> &amp;u : rt)</span><br><span class="line">		Dfs2(u, <span class="literal">false</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d%c"</span>, ans[i], <span class="string">" \n"</span>[i == m]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<h2 id="CF741D-Arpa’s-letter-marked-tree-and-Mehrdad’s-Dokhtar-kosh-paths"><a href="#CF741D-Arpa’s-letter-marked-tree-and-Mehrdad’s-Dokhtar-kosh-paths" class="headerlink" title="CF741D Arpa’s letter-marked tree and Mehrdad’s Dokhtar-kosh paths"></a>CF741D Arpa’s letter-marked tree and Mehrdad’s Dokhtar-kosh paths</h2></blockquote>
<p><strong>题意：一棵根为1 的树，每条边上有一个字符（a-v共22种）。 一条简单路径被称为 $\text{s}\color{red}\text{yk}$ 的当且仅当路径上的字符经过重排后可以变成一个回文串。 求每个子树中最长的 $\text{s}\color{red}\text{yk}$ 路径的长度。</strong></p>
<h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h3><p>不难发现，一个字符串能在重排后变成回文串，当且仅当其中出现奇数次的字符个数不大于 $1$，若我们用二进制整数表示字符集中每个字符出现次数的奇偶性（奇数为 $1$，偶数为 $0$），那么一个状态是合法的吗，当且仅当其为 $0$ 或 $2$ 的自然数次幂。</p>
<p>考虑 $\mathcal{O} (n ^ 2)$ 暴力：对于每个点 $u$。我们钦定路径一定经过 $u$，那么枚举子节点，对于 $22$ 种可能状态，用合法的路径的最大长度更新 $u$ 的答案。</p>
<p>上述做法使用 DSU on tree 可优化到 $\mathcal{O}(22 \times n \log n)$。</p>
<h3 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Splay</span><span class="params">(<span class="keyword">int</span> &amp;x)</span> </span>&#123;</span><br><span class="line">	x = <span class="number">0</span>; <span class="keyword">char</span> c = getchar();</span><br><span class="line">	<span class="keyword">while</span> (c &lt; <span class="number">48</span> || c &gt; <span class="number">57</span>) c = getchar();</span><br><span class="line">	<span class="keyword">while</span> (c &gt;= <span class="number">48</span> &amp;&amp; c &lt;= <span class="number">57</span>) x = x * <span class="number">10</span> + (c ^ <span class="number">48</span>), c = getchar();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span>, S = <span class="number">22</span>;</span><br><span class="line"><span class="keyword">int</span> n, f[N + <span class="number">5</span>], fa[N + <span class="number">5</span>], dep[N + <span class="number">5</span>], siz[N + <span class="number">5</span>], son[N + <span class="number">5</span>], ans[N + <span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> Max[<span class="number">1</span> &lt;&lt; S + <span class="number">1</span>];</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; E[N + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">	siz[u] = <span class="number">1</span>;</span><br><span class="line">	dep[u] = dep[fa[u]] + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;p : E[u]) &#123;</span><br><span class="line">		<span class="keyword">int</span> v = p.first;</span><br><span class="line">		f[v] = f[u] ^ (<span class="number">1</span> &lt;&lt; p.second);</span><br><span class="line">		Dfs(v);</span><br><span class="line">		siz[u] += siz[v];</span><br><span class="line">		<span class="keyword">if</span> (siz[v] &gt; siz[son[u]]) son[u] = v;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (val) Max[f[u]] = <span class="built_in">std</span>::max(Max[f[u]], dep[u]);</span><br><span class="line">	<span class="keyword">else</span> Max[f[u]] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;p : E[u])</span><br><span class="line">		Update(p.first, val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Calc</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> tmp = Max[f[u]] ? Max[f[u]] + dep[u] : <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">22</span>; ++i)</span><br><span class="line">		<span class="keyword">if</span> (Max[f[u] ^ (<span class="number">1</span> &lt;&lt; i)]) tmp = <span class="built_in">std</span>::max(tmp, Max[f[u] ^ (<span class="number">1</span> &lt;&lt; i)] + dep[u]);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;p : E[u])</span><br><span class="line">		tmp = <span class="built_in">std</span>::max(tmp, Calc(p.first));</span><br><span class="line">	<span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">bool</span> heavy)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;p : E[u]) &#123;</span><br><span class="line">		<span class="keyword">int</span> v = p.first;</span><br><span class="line">		<span class="keyword">if</span> (v == son[u]) <span class="keyword">continue</span>;</span><br><span class="line">		Dfs(v, <span class="literal">false</span>);</span><br><span class="line">		ans[u] = <span class="built_in">std</span>::max(ans[u], ans[v]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (son[u]) &#123;</span><br><span class="line">		Dfs(son[u], <span class="literal">true</span>);</span><br><span class="line">		ans[u] = <span class="built_in">std</span>::max(ans[u], ans[son[u]]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;p : E[u]) &#123;</span><br><span class="line">		<span class="keyword">int</span> v = p.first;</span><br><span class="line">		<span class="keyword">if</span> (v == son[u]) <span class="keyword">continue</span>;</span><br><span class="line">		ans[u] = <span class="built_in">std</span>::max(ans[u], Calc(v) - <span class="number">2</span> * dep[u]);</span><br><span class="line">		Update(v, <span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (Max[f[u]]) ans[u] = <span class="built_in">std</span>::max(ans[u], Max[f[u]] - dep[u]);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">22</span>; ++i)</span><br><span class="line">		<span class="keyword">if</span> (Max[f[u] ^ (<span class="number">1</span> &lt;&lt; i)]) ans[u] = <span class="built_in">std</span>::max(ans[u], Max[f[u] ^ (<span class="number">1</span> &lt;&lt; i)] - dep[u]);</span><br><span class="line">	Max[f[u]] = <span class="built_in">std</span>::max(Max[f[u]], dep[u]);</span><br><span class="line">	<span class="keyword">if</span> (!heavy) Update(u, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	Splay(n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		Splay(fa[i]);</span><br><span class="line">		<span class="keyword">char</span> ch = getchar();</span><br><span class="line">		<span class="keyword">while</span> (ch &lt; <span class="string">'a'</span> || ch &gt; <span class="string">'v'</span>) ch = getchar();</span><br><span class="line">		E[fa[i]].push_back(<span class="built_in">std</span>::make_pair(i, (<span class="keyword">int</span>)ch - <span class="string">'a'</span>));</span><br><span class="line">	&#125;</span><br><span class="line">	Dfs(<span class="number">1</span>);</span><br><span class="line">	Dfs(<span class="number">1</span>, <span class="literal">false</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d%c"</span>, ans[i], <span class="string">" \n"</span>[i == n]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<h2 id="Extended：复杂度证明"><a href="#Extended：复杂度证明" class="headerlink" title="Extended：复杂度证明"></a>Extended：复杂度证明</h2></blockquote>
<ul>
<li>我们给出轻重边的定义：一条边上深度较大的点若是重儿子，那么这条边是重边，否则为轻边。</li>
<li>有一条重要性质：<strong>每个点到其根节点路径上的轻边数不超过 $\log n$ 条</strong>。这个的证明不难，因为每个轻儿子的子树大小不超过其父节点子树大小的一半，每条轻边都会使大小增加一倍，那么边数为 $\log n$ 级别。</li>
<li>一个节点的子树在计算自身答案时会被遍历一次，若是轻儿子那么会在其父亲统计答案时遍历一次，因此每个点最多被遍历的次数同样是 $\log n$ 级别的，累加起来可以得出总复杂度为 $\mathcal{O} (n \log n)$。</li>
</ul>
]]></content>
      <categories>
        <category>算法&amp;&amp;学习笔记</category>
      </categories>
      <tags>
        <tag>DSU on tree</tag>
      </tags>
  </entry>
  <entry>
    <title>ZJOI2019 语言</title>
    <url>/2019/10/29/ZJOI2019-%E8%AF%AD%E8%A8%80/</url>
    <content><![CDATA[<p><a href="https://loj.ac/problem/3046" target="_blank" rel="noopener">[ZJOI2019] 语言</a></p>
<p>$\text{ZJOI}\ 2019$ 半年过去了，发现当时的自己真的好菜，考场上只能打打暴力。</p>
<p>于是我决定补这道题的坑。</p>
<a id="more"></a>

<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>九条可怜是一个喜欢规律的女孩子。按照规律，第二题应该是一道和数据结构有关的题。</p>
<p>在一个遥远的国度，有 $n$ 个城市。城市之间有 $n - 1$ 条双向道路，这些道路保证了任何两个城市之间都能直接或者间接地到达。</p>
<p>在上古时代，这 $n$ 个城市之间处于战争状态。在高度闭塞的环境中，每个城市都发展出了自己的语言。而在王国统一之后，语言不通给王国的发展带来了极大的阻碍。为了改善这种情况，国王下令设计了 $m$ 种通用语，并进行了 $m$ 次语言统一工作。在第 $i$ 次统一工作中，一名大臣从城市 $s_i$ 出发，沿着最短的路径走到了 $t_i$，教会了沿途所有城市（包括 $s_i, t_i$）使用第 $i$ 个通用语。</p>
<p>一旦有了共通的语言，那么城市之间就可以开展贸易活动了。两个城市 $u_i, v_i$ 之间可以开展贸易活动当且仅当存在一种通用语 $L$ 满足 $u_i$ 到 $v_i$ 最短路上的所有城市（包括 $u_i, v_i$），都会使用 $L$。</p>
<p>为了衡量语言统一工作的效果，国王想让你计算有多少对城市 $(u, v)$，他们之间可以开展贸易活动。</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>考虑求出每个点 $u$ 能够到达多少不同的点 $a[u]$ ，则答案为 $\displaystyle \frac{\sum a[u]} {2}$ 。</p>
<p>$c[x][y]$ 表示 $x$ 与 $y$ 是否可达。</p>
<p>先树剖，动态开点线段树维护上面那个东西，对一条路径 $(u, v)$ 上的所有点都进行区间修改，复杂度 $\mathcal{O} (n ^ 2 \log ^ 2 n)$ ，很优秀。</p>
<p>可是这样还是只能拿 $20$ 分，差一点（<del>也就一个 n 的差距</del>），如果能优化一下就好了。</p>
<p>仔细想一想，会发现这东西是一个类似<strong>树上差分</strong>的过程，若 $c[x][y]$ 的真正意义是 $x$ 被 $y$ 覆盖了几次，那么我们就相当于在 $u$ 与 $v$ 同时修改，回溯时在 $fa[lca_{u, v}]$ 处消除影响。<strong>线段树合并</strong>可以很好地帮助我们解决这个问题。</p>
<p>有一个比较巧妙的想法是看了题解之后才了解的，就是我们 $\text{pushup}$ 的时候只需要关注这个节点的标记是否是正的，这样可以省去 $\text{pushdown}$ 。</p>
<p>还有一个稍微值得注意的地方：对于某个点路径修改时，你势必会对其本身也进行修改，而始终没被走过的点则不会被自己修改，我们在统计答案时会出现问题，那么我们不如强制对于每个点修改其本身，最后减去即可（。</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Split</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x = <span class="number">0</span>; <span class="keyword">char</span> c = getchar();</span><br><span class="line">	<span class="keyword">while</span> (c &lt; <span class="number">48</span> || c &gt; <span class="number">57</span>) c = getchar();</span><br><span class="line">	<span class="keyword">while</span> (c &gt;= <span class="number">48</span> &amp;&amp; c &lt;= <span class="number">57</span>) x = x * <span class="number">10</span> + (c ^ <span class="number">48</span>), c = getchar();</span><br><span class="line">	<span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, idx, dep[N + <span class="number">5</span>], siz[N + <span class="number">5</span>], son[N + <span class="number">5</span>], dfn[N + <span class="number">5</span>], top[N + <span class="number">5</span>], fa[N + <span class="number">5</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; E[N + <span class="number">5</span>];</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; Vec;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::pair&lt;<span class="built_in">std</span>::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;, <span class="keyword">int</span>&gt;&gt; Q[N + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs1</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> f)</span> </span>&#123;</span><br><span class="line">	dep[u] = dep[f] + <span class="number">1</span>;</span><br><span class="line">	siz[u] = <span class="number">1</span>, fa[u] = f;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">int</span> &amp;v : E[u]) &#123;</span><br><span class="line">		<span class="keyword">if</span> (v == f) <span class="keyword">continue</span>;</span><br><span class="line">		Dfs1(v, u), siz[u] += siz[v];</span><br><span class="line">		<span class="keyword">if</span> (siz[v] &gt; siz[son[u]]) son[u] = v;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs2</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> topf)</span> </span>&#123;</span><br><span class="line">	top[u] = topf;</span><br><span class="line">	dfn[u] = ++idx;</span><br><span class="line">	Q[u].push_back(<span class="built_in">std</span>::make_pair(<span class="built_in">std</span>::make_pair(dfn[u], dfn[u]), <span class="number">1</span>));</span><br><span class="line">	<span class="keyword">if</span> (fa[u] != <span class="number">0</span>) Q[fa[u]].push_back(<span class="built_in">std</span>::make_pair(<span class="built_in">std</span>::make_pair(dfn[u], dfn[u]), <span class="number">-1</span>));</span><br><span class="line">	<span class="keyword">if</span> (son[u]) Dfs2(son[u], topf);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">int</span> &amp;v : E[u])</span><br><span class="line">		<span class="keyword">if</span> (v != fa[u] &amp;&amp; v != son[u])</span><br><span class="line">			Dfs2(v, v);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">	<span class="keyword">int</span> ls, rs, val, tag;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Segment_Tree</span> &#123;</span></span><br><span class="line">	<span class="keyword">int</span> cnt, rt[N + <span class="number">5</span>];</span><br><span class="line">	Node tr[N &lt;&lt; <span class="number">8</span>];</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Pushup</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (tr[p].tag &gt; <span class="number">0</span>) tr[p].val = r - l + <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">else</span> tr[p].val = tr[tr[p].ls].val + tr[tr[p].rs].val;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">Modify</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (l &gt;= x &amp;&amp; r &lt;= y) <span class="keyword">return</span> (<span class="keyword">void</span>) (tr[p].tag += v, Pushup(p, l, r));</span><br><span class="line">		<span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span> (x &lt;= mid) &#123;</span><br><span class="line">			<span class="keyword">if</span> (tr[p].ls == <span class="number">0</span>) tr[p].ls = ++cnt;</span><br><span class="line">			Modify(tr[p].ls, l, mid, x, y, v);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (y &gt; mid) &#123;</span><br><span class="line">			<span class="keyword">if</span> (tr[p].rs == <span class="number">0</span>) tr[p].rs = ++cnt;</span><br><span class="line">			Modify(tr[p].rs, mid + <span class="number">1</span>, r, x, y, v);</span><br><span class="line">		&#125;</span><br><span class="line">		Pushup(p, l, r);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (p == <span class="number">0</span> || q == <span class="number">0</span>) <span class="keyword">return</span> p | q;</span><br><span class="line">		tr[p].tag += tr[q].tag;</span><br><span class="line">		<span class="keyword">if</span> (l == r) <span class="keyword">return</span> Pushup(p, l, r), p;</span><br><span class="line">		<span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">		tr[p].ls = Merge(tr[p].ls, tr[q].ls, l, mid);</span><br><span class="line">		tr[p].rs = Merge(tr[p].rs, tr[q].rs, mid + <span class="number">1</span>, r);</span><br><span class="line">		<span class="keyword">return</span> Pushup(p, l, r), p;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Modify</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">		Modify(rt[u], <span class="number">1</span>, n, l, r, v);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">		rt[u] = Merge(rt[u], rt[v], <span class="number">1</span>, n);</span><br><span class="line">	&#125;</span><br><span class="line">&#125; Tree;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">while</span> (top[u] != top[v]) &#123;</span><br><span class="line">		<span class="keyword">if</span> (dep[top[u]] &lt; dep[top[v]]) <span class="built_in">std</span>::swap(u, v);</span><br><span class="line">		Vec.push_back(<span class="built_in">std</span>::make_pair(dfn[top[u]], dfn[u]));</span><br><span class="line">		u = fa[top[u]];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (dep[u] &gt; dep[v]) <span class="built_in">std</span>::swap(u, v);</span><br><span class="line">	Vec.push_back(<span class="built_in">std</span>::make_pair(dfn[u], dfn[v]));</span><br><span class="line">	<span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">int</span> &amp;v : E[u]) &#123;</span><br><span class="line">		<span class="keyword">if</span> (v == fa[u]) <span class="keyword">continue</span>;</span><br><span class="line">		Dfs(v);</span><br><span class="line">		Tree.Merge(u, v);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> <span class="built_in">std</span>::pair&lt;<span class="built_in">std</span>::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;, <span class="keyword">int</span>&gt; &amp;p : Q[u])</span><br><span class="line">		Tree.Modify(u, p.first.first, p.first.second, p.second);</span><br><span class="line">	ans += Tree.tr[Tree.rt[u]].val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	n = Split(), m = Split();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">		<span class="keyword">int</span> u = Split(), v = Split();</span><br><span class="line">		E[u].push_back(v);</span><br><span class="line">		E[v].push_back(u);</span><br><span class="line">	&#125;</span><br><span class="line">	Dfs1(<span class="number">1</span>, <span class="number">0</span>), Dfs2(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">		<span class="keyword">int</span> u = Split(), v = Split(), lca = LCA(u, v);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">const</span> <span class="built_in">std</span>::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &amp;p : Vec) &#123;</span><br><span class="line">			Q[u].push_back(<span class="built_in">std</span>::make_pair(p, <span class="number">1</span>));</span><br><span class="line">			Q[v].push_back(<span class="built_in">std</span>::make_pair(p, <span class="number">1</span>));</span><br><span class="line">			<span class="keyword">if</span> (fa[lca] != <span class="number">0</span>) Q[fa[lca]].push_back(<span class="built_in">std</span>::make_pair(p, <span class="number">-2</span>));</span><br><span class="line">		&#125;</span><br><span class="line">		Vec.clear();</span><br><span class="line">	&#125;</span><br><span class="line">	Tree.cnt = n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">		Tree.rt[i] = i;</span><br><span class="line">	Dfs(<span class="number">1</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, (ans - n) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>树链剖分</tag>
        <tag>线段树合并</tag>
      </tags>
  </entry>
  <entry>
    <title>学习笔记 中国剩余定理</title>
    <url>/2019/10/16/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/</url>
    <content><![CDATA[<p>中国剩余定理（CRT）可用于求线性同余方程组的最小整数解。</p>
<a id="more"></a>

<h1 id="CRT"><a href="#CRT" class="headerlink" title="CRT"></a>CRT</h1><p>中国剩余定理（CRT）给出了下面这组关于 $x$ 的线性方程组当模数两两互质时的最小非负整数解<br>$$<br>\begin{cases}x \equiv a_1 &amp; \pmod{m_1} \x \equiv a_2 &amp; \pmod{m_2} \… \x \equiv a_n &amp; \pmod{m_n}\end{cases}<br>$$<br>设 $m = \prod _{i = 1} ^n m_i$，$M_i = m / m_i$，$t_i$ 为 $M_i$ 在模 $m_i$ 意义下的逆元，那么整数解为<br>$$<br>x = \sum _{i = 1} ^n a_i M_i t_i<br>$$<br>证明：对于任意的 $i$，因为 $M_i = m / m_i$ 是除 $m_i$ 之外所有模数的倍数，那么对于任意的 $j \ne i$，$a_i M_i t_i \equiv 0 \ \ (\text{mod}\ m_j)$，因此解成立。</p>
<h1 id="exCRT"><a href="#exCRT" class="headerlink" title="exCRT"></a>exCRT</h1><p>那么当模数不一定两两互质时呢？此时要用到扩展中国剩余定理（exCRT）。</p>
<p>考虑数学归纳法。假设我们已经求出了前 $k - 1$ 个方程的一个解 $x$，记 $m = \text{lcm} (m_1, m_2,…,m_{k - 1})$，则 $x + i \cdot m (i \in \mathbb{Z})$ 是前 $k - 1$ 个方程的通解。</p>
<p>考虑第 $k$ 个方程，我们要求出一个整数 $t$，使得 $x + t \cdot m \equiv a_k \pmod{m_k}$。移项得 $t \cdot m \equiv a_k - x \pmod{m_k}$，这是一个线性同余方程，我们可以用扩展欧几里得算法检验并求出它的的解。如果有解，那么 $x’ = x + t \cdot m$ 就是前 $k$ 个方程的共同解。</p>
<p>因此，使用 $n$ 次扩展欧几里得算法就能得到上述方程组在模数不满足两两互质时的解。</p>
<h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><p>题目：<a href="https://www.luogu.org/problem/P4777" target="_blank" rel="noopener">洛谷P4777</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> b ? Gcd(b, a % b) : a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ExGcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> &amp;x, <span class="keyword">int</span> &amp;y)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!b) <span class="keyword">return</span> (<span class="keyword">void</span>) (x = <span class="number">1</span>, y = <span class="number">0</span>);</span><br><span class="line">	ExGcd(b, a % b, y, x);</span><br><span class="line">	y -= (a / b) * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> Mod)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (; y; y &gt;&gt;= <span class="number">1</span>, x = (x + x) % Mod)</span><br><span class="line">		<span class="keyword">if</span> (y &amp; <span class="number">1</span>) res = (res + x) % Mod;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n, a, m, fail = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>, &amp;n, &amp;m, &amp;a);</span><br><span class="line">	<span class="keyword">int</span> lcm = m, res = a, x, y;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>, &amp;m, &amp;a);</span><br><span class="line">		a = ((a - res) % m + m) % m;</span><br><span class="line">		<span class="keyword">int</span> g = Gcd(lcm, m);</span><br><span class="line">		<span class="keyword">if</span> (a % g != <span class="number">0</span>) fail = <span class="number">1</span>;</span><br><span class="line">		ExGcd(lcm, m, x, y);</span><br><span class="line">		<span class="keyword">int</span> tmp = Mul(x, a / g, m);</span><br><span class="line">		res += lcm * tmp;</span><br><span class="line">		lcm = lcm / g * m;</span><br><span class="line">		res = (res % lcm + lcm) % lcm;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, fail ? <span class="number">-1</span> : res);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>算法&amp;&amp;学习笔记</category>
      </categories>
      <tags>
        <tag>数论</tag>
        <tag>中国剩余定理</tag>
      </tags>
  </entry>
  <entry>
    <title>XJOIContest1264</title>
    <url>/2019/10/14/XJOIContest1264/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="点此输入密码后，按Enter查看文章" />
    <label for="hbePass">点此输入密码后，按Enter查看文章</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="3a5555eda0d49aa802e3378e6f39c26b0f9da916509a1f9bcba6aa116fcb8e26"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>比赛</category>
      </categories>
  </entry>
  <entry>
    <title>XJOIContest1258</title>
    <url>/2019/10/11/XJOIContest1258/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="点此输入密码后，按Enter查看文章" />
    <label for="hbePass">点此输入密码后，按Enter查看文章</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="b4e040b1ccd978ff612bfa7df65c5882d5dd27eba963f0aa4e1a358cb336e9f4"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>比赛</category>
      </categories>
  </entry>
  <entry>
    <title>NOI2005 月下柠檬树</title>
    <url>/2019/10/10/NOI2005-%E6%9C%88%E4%B8%8B%E6%9F%A0%E6%AA%AC%E6%A0%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problem/P4207" target="_blank" rel="noopener">[NOI2005] 月下柠檬树</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>李哲非常非常喜欢柠檬树，特别是在静静的夜晚，当天空中有一弯明月温柔地照亮地面上的景物时，他必会悠闲地坐在他亲手植下的那棵柠檬树旁，独自思索着人生的哲理。</p>
<a id="more"></a>

<p>李哲是一个喜爱思考的孩子，当他看到在月光的照射下柠檬树投在地面上的 影子是如此的清晰，马上想到了一个问题：树影的面积是多大呢？</p>
<p>李哲知道，直接测量面积是很难的，他想用几何的方法算，因为他对这棵柠 檬树的形状了解得非常清楚，而且想好了简化的方法。</p>
<p>李哲将整棵柠檬树分成了 $n$ 层，由下向上依次将层编号为 $1,2,…,n$。从第 $1$ 到 $n-1$ 层，每层都是一个圆台型，第 $n$ 层(最上面一层)是圆锥型。对于圆台型， 其上下底面都是水平的圆。对于相邻的两个圆台，上层的下底面和下层的上底面 重合。第 $n$ 层(最上面一层)圆锥的底面就是第 $n-1$ 层圆台的上底面。所有的底面的圆心(包括树顶)处在同一条与地面垂直的直线上。李哲知道每一层的高度为 $h_1,h_2,…,h_n$，第 $1$ 层圆台的下底面距地面的高度为 $h_0$，以及每层的下底面的圆的半径 $r_1,r_2,…,r_n$。李哲用熟知的方法测出了月亮的光线与地面的夹角为 $alpha$。</p>
<p><img src="https://s2.ax1x.com/2019/10/09/uInxQf.png" alt="uInxQf.png"></p>
<p>为了便于计算，假设月亮的光线是平行光，且地面是水平的，在计算时忽略树干所产生的影子。李哲当然会算了，但是他希望你也来练练手。</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>自适应辛普森</p>
<p>乍一看十分麻烦。。。</p>
<p>由于是平行光，投影一下就变成了下图。</p>
<p>首先，第一个 $h_0$ 可以直接忽略（题目说了忽略树干影子）。其次，圆的半径不会改变，只有高度与圆台投影形成的梯形尺寸需要注意（最后一个圆锥也可看成圆台，三角形看成梯形）。</p>
<p>只要我们得出了各个圆以及梯形的坐标与大小，不必考虑重合与否，直接套上辛普森，问题便迎刃而解。</p>
<p><img src="https://s2.ax1x.com/2019/10/09/uIlzVO.png" alt></p>
<p>我们发现，高度为 $H$ 的物体的长度会变为$H \cdot \displaystyle \frac 1 {tan \ \alpha}$，这可以帮助我们确定横坐标。</p>
<p>比较麻烦的是梯形。我们需要知道它的左右端点以及上下底长。它的腰是由相邻两圆的公切线构成的（知道即可，我们并不需要储存这两条线），两底则可以由左右端点距圆心距离和半径通过勾股定理得出。因此我们先要得出左右端点的位置。</p>
<p>观察下图，发现这两个端点离圆心很近，我们将 $AE,CH$ 分别相连，分别过$E,H$ 向 $x$ 轴作垂线，过$A$ 点向$CH$ 作垂线，应用简单的相似三角形知识即可求出左右端点的坐标。这里图就不给出了。</p>
<p><img src="https://s2.ax1x.com/2019/10/13/uvV8mR.png" alt="a"></p>
<p>至此，我们已经得出了所有圆和梯形的位置与大小。套上辛普森板子即可。</p>
<p>还有，在计算 $F$ 值时梯形可能会麻烦些，但是这只是初中几何题，这里不再赘述。</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sqr(x) ((x) * (x))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-8</span>, pi = <span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Sgn</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x &lt; -eps ? <span class="number">-1</span> : x &gt; eps;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Circle</span> &#123;</span></span><br><span class="line">	<span class="keyword">double</span> x, y, r;</span><br><span class="line">	Circle() &#123;&#125;</span><br><span class="line">	Circle(<span class="keyword">double</span> _x, <span class="keyword">double</span> _y, <span class="keyword">double</span> _r) : x(_x), y(_y), r(_r) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Trape</span> &#123;</span></span><br><span class="line">	<span class="keyword">double</span> l, r, al, ar;</span><br><span class="line">	Trape() &#123;&#125;</span><br><span class="line">	Trape(<span class="keyword">double</span> _l, <span class="keyword">double</span> _r, <span class="keyword">double</span> _al, <span class="keyword">double</span> _ar) : l(_l), r(_r), al(_al), ar(_ar) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> Alpha, L, R, h[N + <span class="number">5</span>], r[N + <span class="number">5</span>];</span><br><span class="line">Circle a[N + <span class="number">5</span>];</span><br><span class="line">Trape t[N + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">F</span><span class="params">(<span class="keyword">double</span> pos)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">double</span> res = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">		<span class="keyword">if</span> (Sgn(a[i].r - <span class="built_in">fabs</span>(pos - a[i].x)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">double</span> tmp = <span class="built_in">sqrt</span>(sqr(a[i].r) - sqr(<span class="built_in">fabs</span>(pos - a[i].x)));</span><br><span class="line">			res = <span class="built_in">std</span>::max(res, tmp * <span class="number">2</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (Sgn(pos - t[i].l) &gt; <span class="number">0</span> &amp;&amp; Sgn(t[i].r - pos) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">double</span> d = pos - t[i].l, len = t[i].r - t[i].l;</span><br><span class="line">			<span class="keyword">double</span> Len = len * t[i].al / (t[i].al - t[i].ar);</span><br><span class="line">			<span class="keyword">double</span> tmp = (Len - d) / Len * t[i].al;</span><br><span class="line">			res = <span class="built_in">std</span>::max(res, tmp * <span class="number">2</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">calc</span><span class="params">(<span class="keyword">double</span> l, <span class="keyword">double</span> r)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> (r - l) * (F(l) + F(r) + <span class="number">4</span> * F((l + r) / <span class="number">2</span>)) / <span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Simpson</span><span class="params">(<span class="keyword">double</span> l, <span class="keyword">double</span> r, <span class="keyword">double</span> Eps, <span class="keyword">double</span> ans)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">double</span> Mid = (l + r) / <span class="number">2</span>, SL = calc(l, Mid), SR = calc(Mid, r);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">fabs</span>(SL + SR - ans) &lt;= Eps * <span class="number">15</span>) <span class="keyword">return</span> SL + SR + (SL + SR - ans) / <span class="number">15</span>;</span><br><span class="line">	<span class="keyword">return</span> Simpson(l, Mid, Eps / <span class="number">2</span>, SL) + Simpson(Mid, r, Eps / <span class="number">2</span>, SR);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%lf"</span>, &amp;n, &amp;Alpha);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;h[i]);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;r[i]);</span><br><span class="line">	<span class="keyword">double</span> H = <span class="number">0</span>, Tan = <span class="number">1.0</span> / <span class="built_in">tan</span>(Alpha), L = <span class="number">0</span>, R = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		a[i] = Circle(Tan * H, <span class="number">0</span>, r[i]);</span><br><span class="line">		<span class="keyword">double</span> len = Tan * h[i], ll = (r[i + <span class="number">1</span>] - r[i]) * r[i] / len, rr = (r[i + <span class="number">1</span>] - r[i]) * r[i + <span class="number">1</span>] / len;</span><br><span class="line">		t[i] = Trape(Tan * H - ll, Tan * (H + h[i]) - rr, <span class="built_in">sqrt</span>(sqr(r[i]) - sqr(ll)), <span class="built_in">sqrt</span>(sqr(r[i + <span class="number">1</span>]) - sqr(rr)));</span><br><span class="line">		H += h[i];</span><br><span class="line">		L = <span class="built_in">std</span>::min(L, a[i].x - a[i].r);</span><br><span class="line">		R = <span class="built_in">std</span>::max(R, a[i].x + a[i].r);</span><br><span class="line">	&#125;</span><br><span class="line">	R = <span class="built_in">std</span>::max(R, Tan * H);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>, Simpson(L, R, <span class="number">5e-4</span>, calc(L, R)));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>积分</tag>
        <tag>自适应辛普森</tag>
        <tag>计算几何</tag>
      </tags>
  </entry>
  <entry>
    <title>NOI2015 品酒大会</title>
    <url>/2019/10/09/NOI2015-%E5%93%81%E9%85%92%E5%A4%A7%E4%BC%9A/</url>
    <content><![CDATA[<p><a href="https://loj.ac/problem/2133" target="_blank" rel="noopener">[NOI2015] 品酒大会</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>一年一度的「幻影阁夏日品酒大会」隆重开幕了。大会包含品尝和趣味挑战两个环节，分别向优胜者颁发「首席品酒家」和「首席猎手」两个奖项，吸引了众多品酒师参加。</p>
<a id="more"></a>

<p>在大会的晚餐上，调酒师 Rainbow 调制了 $n$ 杯鸡尾酒。这 $n$ 杯鸡尾酒排成一行，其中第 $i$ 杯酒 （$1 \le i \le n$） 被贴上了一个标签 ，每个标签都是 $26$ 个小写英文字母之一。设 $\text{Str}(l, r)$ 表示第 $l$ 杯酒到第 $r$ 杯酒的 $r - l + 1$ 个标签顺次连接构成的字符串。若 $\text{Str}(p, p_0) = \text{Str}(q, q_0)$ ，其中 $1 \le p \le p_0 \le n$，$1 \le q \le q_0 \le n$，$p \ne q$，$p_0 - p + 1 = q_0 - q + 1 = r$，则称第 $p$ 杯酒与第 $q$ 杯酒是「$r$相似」的。当然两杯「$r$相似」（$r \gt 1$）的酒同时也是「$1$相似」、「$2$相似」、、「$(r - 1)$相似」的。特别地，对于任意的 $1 \le p,q \le n$，$p \ne q$，第 $p$ 杯酒和第 $q$ 杯酒都是「$0$相似」的。</p>
<p>在品尝环节上，品酒师 Freda 轻松地评定了每一杯酒的美味度，凭借其专业的水准和经验成功夺取了「首席品酒家」的称号，其中第 $i$ 杯酒 （$1 \le i \le n$） 的美味度为$a_i$ 。现在 Rainbow 公布了挑战环节的问题：本次大会调制的鸡尾酒有一个特点，如果把第 $p$ 杯酒与第 $q$ 杯酒调兑在一起，将得到一杯美味度为 $a_p \cdot a_q$ 的酒。现在请各位品酒师分别对于 $r = 0,1,2,…,n - 1$，统计出有多少种方法可以选出两杯「$r$相似」的酒，并回答选择两杯「$r$相似」的酒调兑可以得到的美味度的最大值。</p>
<p>对于$100 %$的数据，满足$n \le 3 \times 10^5,\ |a_i| \le 10 ^ 9$。</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>其实这题挺清新的，只是题目略长。我的做法是后缀数组+并查集</p>
<p>先看第一问。很容易想到根据 $r$ 从后往前做，最后扫一遍累加。</p>
<p>建出后缀数组，我们将 $\text{height}$ 从大到小排序，对于 $\text{height}$ 值为 $r$ 的后缀 $i$，它和排在它前面一名的后缀 $r$ 相似，并且在 $\text{SA}$ 数组中，与 $i$ 相邻且排在 $i$ 后面的后缀都能够和 $i$ 的前一名构成 $r$ 相似。这便是我们从后往前做的原因。因为排在 $i$ 后面、与 $i$ 相邻的后缀必然已经在之前统计过了。我们用并查集维护每一个后缀所在集合的大小，每次统计答案时，将 $i$ 和排在 $i$ 前一名后缀的集合合并，对答案的贡献就是 $\text{size}$ 值相乘。</p>
<p>第二问其实差不多，我们在并查集中多维护 $\max$ 和 $\min$（维护 $min$ 是因为有负数），合并时相乘更新即可。</p>
<p>时间复杂度$\mathcal {O} (n \log n)$</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> Suffix_Array &#123;</span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3e5</span>, LOG = <span class="number">20</span>;</span><br><span class="line">	<span class="keyword">int</span> n, S = <span class="number">300</span>, SA[N + <span class="number">5</span>], rank[N + <span class="number">5</span>], tp[N + <span class="number">5</span>], tax[N + <span class="number">5</span>], height[N + <span class="number">5</span>];</span><br><span class="line">	<span class="keyword">int</span> a[N + <span class="number">5</span>], fa[N + <span class="number">5</span>], size[N + <span class="number">5</span>], id[N + <span class="number">5</span>];</span><br><span class="line">	LL ans1[N + <span class="number">5</span>], ans2[N + <span class="number">5</span>], Min[N + <span class="number">5</span>], Max[N + <span class="number">5</span>], Val[N + <span class="number">5</span>];</span><br><span class="line">	<span class="keyword">char</span> str[N + <span class="number">5</span>];</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%s"</span>, &amp;n, str + <span class="number">1</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">			Max[i] = Min[i] = a[i], Val[i] = <span class="number">-2e18</span>;</span><br><span class="line">			fa[i] = id[i] = i, size[i] = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">memset</span>(ans2, <span class="number">0xcf</span>, <span class="keyword">sizeof</span>(ans2));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Radix_Sort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= S; ++i) tax[i] = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) tax[rank[i]]++;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= S; ++i) tax[i] += tax[i - <span class="number">1</span>];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; --i) SA[tax[rank[tp[i]]]--] = tp[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) rank[i] = str[i] - <span class="string">'a'</span> + <span class="number">1</span>, tp[i] = i;</span><br><span class="line">		Radix_Sort();</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> len = <span class="number">1</span>, p = <span class="number">0</span>; p &lt; n; len &lt;&lt;= <span class="number">1</span>, S = p) &#123;</span><br><span class="line">			p = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = n - len + <span class="number">1</span>; i &lt;= n; ++i) tp[++p] = i;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="keyword">if</span> (SA[i] &gt; len) tp[++p] = SA[i] - len;</span><br><span class="line">			Radix_Sort();</span><br><span class="line">			<span class="built_in">std</span>::swap(rank, tp);</span><br><span class="line">			rank[SA[<span class="number">1</span>]] = p = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) rank[SA[i]] = tp[SA[i]] == tp[SA[i - <span class="number">1</span>]] &amp;&amp; tp[SA[i] + len] == tp[SA[i - <span class="number">1</span>] + len] ? p : ++p;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, H = <span class="number">0</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">			<span class="keyword">if</span> (rank[i] == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">			H -= (H &gt; <span class="number">0</span>);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = SA[rank[i] - <span class="number">1</span>]; str[i + H] == str[j + H]; ++H);</span><br><span class="line">			height[rank[i]] = H;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> fa[x] == x ? x : (fa[x] = Find(fa[x]));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">		x = Find(x), y = Find(y);</span><br><span class="line">		<span class="keyword">if</span> (size[x] &lt; size[y]) <span class="built_in">std</span>::swap(x, y);</span><br><span class="line">		ans1[len] += <span class="number">1L</span>L * size[x] * size[y];</span><br><span class="line">		fa[y] = x, size[x] += size[y];</span><br><span class="line">		Val[x] = <span class="built_in">std</span>::max(Val[x], <span class="built_in">std</span>::max(<span class="built_in">std</span>::max(Max[x] * Max[y], Min[x] * Min[y]), <span class="built_in">std</span>::max(Max[x] * Min[y], Min[x] * Max[y])));</span><br><span class="line">		Max[x] = <span class="built_in">std</span>::max(Max[x], Max[y]);</span><br><span class="line">		Min[x] = <span class="built_in">std</span>::min(Min[x], Min[y]);</span><br><span class="line">		ans2[len] = <span class="built_in">std</span>::max(ans2[len], Val[x]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">Cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x, <span class="keyword">const</span> <span class="keyword">int</span> &amp;y)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> height[x] &gt; height[y];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">std</span>::sort(id + <span class="number">2</span>, id + <span class="number">1</span> + n, Cmp);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)</span><br><span class="line">			Merge(SA[id[i]], SA[id[i] - <span class="number">1</span>], height[id[i]]);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">2</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">			ans1[i] += ans1[i + <span class="number">1</span>];</span><br><span class="line">			ans2[i] = <span class="built_in">std</span>::max(ans2[i], ans2[i + <span class="number">1</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) <span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>, ans1[i], ans1[i] &gt; <span class="number">0</span> ? ans2[i] : <span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Suffix_Array;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	Init();</span><br><span class="line">	Build();</span><br><span class="line">	Solve();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>后缀数组</tag>
        <tag>并查集</tag>
      </tags>
  </entry>
  <entry>
    <title>XJOIContest1254</title>
    <url>/2019/10/07/XJOIContest1254/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="点此输入密码后，按Enter查看文章" />
    <label for="hbePass">点此输入密码后，按Enter查看文章</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="451506b4f5bd9b21ddf06d2ee2502239f6507381f73f655fee4a615b65954e2c"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>比赛</category>
      </categories>
  </entry>
  <entry>
    <title>学习笔记 后缀数组</title>
    <url>/2019/10/04/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<p>后缀数组（SA）是处理字符串的有力工具。它较后缀自动机更易理解，较后缀树更容易实现，并且SA也完全不比它们中的任何一者逊色。</p>
<a id="more"></a>

<p>本文将介绍后缀数组的$n \log n$倍增求法以及它的性质与简单应用。</p>
<blockquote>
<h2 id="一些定义"><a href="#一些定义" class="headerlink" title="一些定义"></a>一些定义</h2></blockquote>
<p>在详述算法之前，我们得先对一些定义有所了解。</p>
<h4 id="子串"><a href="#子串" class="headerlink" title="子串"></a>子串</h4><p>$s[l..r](l \le r)$表示字符串$S$的$l$到$r$，即$s[l], s[l + 1]…s[r - 1], s[r]$构成的字符串。</p>
<h4 id="后缀"><a href="#后缀" class="headerlink" title="后缀"></a>后缀</h4><p>$\text{Suffix} (i)$表示字符串$S$从第$i$个字符开始直到末尾的字符串，即$s[i, len]$这个子串。</p>
<h4 id="字符串大小"><a href="#字符串大小" class="headerlink" title="字符串大小"></a>字符串大小</h4><p>即字符串的字典序大小。对于两个字符串$s$和$t$，从头开始依次比较每一个字符，若$s[i] = t[i]$则比较下一个字符，否则若$s[i] &lt; t[i]$则$s &lt; t$；若$s[i] &gt; t[i]$则$s &gt; t$。若其中一个字符串已经到尾了仍无结果，那么若$len(s) &lt; len(t)$则$s &lt; t$；若$len(s) &gt; len(t)$则$s &gt; t$；若$len(s) = len(t)$则$s = t$。</p>
<h4 id="后缀数组"><a href="#后缀数组" class="headerlink" title="后缀数组"></a>后缀数组</h4><p>一维数组$SA$存储了$1 \sim n$的某个排列，保证$\forall i (1 \le i \lt n), \text{Suffix} (SA[i]) &lt; \text{Suffix} (SA[i + 1])$，即$S$的所有后缀从小到大排序后第$i$名起始位置。</p>
<h4 id="名次数组"><a href="#名次数组" class="headerlink" title="名次数组"></a>名次数组</h4><p>一维数组$Rank$同样存储了$1 \sim n$的某个排列，它表示$\text{Suffix} (i)$的排名。$Rank$数组与$SA$数组是互逆的，即$Rank[SA[i]] = i,\ SA[Rank[i]] = i$。</p>
<blockquote>
<h2 id="SA的倍增求法"><a href="#SA的倍增求法" class="headerlink" title="SA的倍增求法"></a>SA的倍增求法</h2></blockquote>
<p>现在开始详细地讲述倍增算法。</p>
<h4 id="思想"><a href="#思想" class="headerlink" title="思想"></a>思想</h4><p>暴力算法，是将所有后缀存下来，进行快排，复杂度$\mathcal {O} (n ^ 2 \log n)$</p>
<p>这样当然不行，我们要进行优化</p>
<p>倍增算法的核心思想是：假设我们已经求出所有后缀以前$2 ^ k$个字符排序后的结果，那么我们可以根据已求出的长为$2 ^ k$的后缀排名，求出长为$2 ^ {k + 1}$的后缀排名，在若干次这样的操作后将$SA$数组完整地求出。</p>
<p>至于排序的过程，我们可以将长度为$2 ^ {k + 1}$的字符串拆分成一前一后两个长度均为$2 ^ k$的字符串，以前半部分为第一关键字，后半部分为第二关键字，进行基数排序，当然这里也可换用快排，这样总复杂度就会变成$\mathcal {O}(n \log ^ 2n)$</p>
<p>下面的图片非常形象地展示了这一过程</p>
<p><img src="https://s2.ax1x.com/2019/10/05/urTGuQ.md.jpg" alt="img"></p>
<h4 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h4><p>先展示一部分代码</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Build_SA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> Size = <span class="number">300</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) Rank[i] = str[i] - <span class="string">'0'</span> + <span class="number">1</span>, tp[i] = i;</span><br><span class="line">    Radix_Sort(Size);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> len = <span class="number">1</span>, p = <span class="number">0</span>; p &lt; n; Size = p, len &lt;&lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n - len + <span class="number">1</span>; i &lt;= n; ++i) tp[++p] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="keyword">if</span> (SA[i] &gt; len) tp[++p] = SA[i] - len;</span><br><span class="line">        Radix_Sort(Size);</span><br><span class="line">        <span class="built_in">std</span>::swap(Rank, tp);</span><br><span class="line">        Rank[SA[<span class="number">1</span>]] = p = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) Rank[SA[i]] = tp[SA[i]] == tp[SA[i - <span class="number">1</span>]] &amp;&amp; tp[SA[i] + len] == tp[SA[i - <span class="number">1</span>] + len] ? p : ++p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在一开始，我们钦定每个后缀的$rank$值（第一关键字）为其首字符值，$tp$值（第二关键字）为其位置（规定字典序一样的先出现的排在前面），进行基数排序。$Size$为字符集（亦即排序时的数值范围）大小。此时我们已将长为$2 ^ 0 = 1$的后缀排序完毕。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> len = <span class="number">1</span>, p = <span class="number">0</span>; p &lt; n; Size = p, len &lt;&lt;= <span class="number">1</span>) &#123;</span><br></pre></td></tr></table></figure>

<p>接下来我们开始倍增。$len$为其<strong>上一次</strong>排序时的长度（也就是这次的一半），$p$为不同的$SA$值的数量，当$p = n$时，所有的后缀排名都不相同，我们已经得出了$SA$数组，便可退出循环。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n - len + <span class="number">1</span>; i &lt;= n; ++i) tp[++p] = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="keyword">if</span> (SA[i] &gt; len) tp[++p] = SA[i] - len;</span><br></pre></td></tr></table></figure>

<p>每次循环开始时，我们要先求出$tp$数组，代表<strong>长度为$2len$的后缀中第二关键字排名为$i$的位置</strong>，在基数排序中有用到。注意，最后$len$个后缀此时已经不需拼接上后缀，因此它们的第二关键字大小为$0$，应排在最前面。而对于长度大于$len$的后缀，它们的第二关键字排名应由上一轮的$SA$数组得到，因此我们从小到大枚举，将$SA$数组中<strong>可作为第二关键字的值</strong>减去$len$（因为$SA$数组和$tp$数组存的都是位置，减去则是因为这是第二关键字）存入$tp$。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Radix_Sort(Size);</span><br></pre></td></tr></table></figure>

<p>然后是基数排序，后面再说。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">std</span>::swap(Rank, tp);</span><br><span class="line">Rank[SA[<span class="number">1</span>]] = p = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) Rank[SA[i]] = tp[SA[i]] == tp[SA[i - <span class="number">1</span>]] &amp;&amp; tp[SA[i] + len] == tp[SA[i - <span class="number">1</span>] + len] ? p : ++p;</span><br></pre></td></tr></table></figure>

<p>排完序后我们要由新的$SA$数组得到$Rank$数组。因此我们再次从小到大枚举，并进行比较：如果某个后缀与其前一名后缀的前半段和后半段在上一轮的排名都一样，那我们则记他们拥有一样的$Rank$值，并以此更新$p$值。</p>
<h4 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Radix_Sort</span><span class="params">(<span class="keyword">int</span> S)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= S; ++i) tax[i] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) tax[Rank[i]]++;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= S; ++i) tax[i] += tax[i - <span class="number">1</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; --i) SA[tax[Rank[tp[i]]]--] = tp[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>比较绕。在前一轮我们已经对第二关键字进行了排序，并存到了$tp$数组中，现在我们只需以此为基础考虑第一关键字（$Rank$）即可。回顾一下此时三个数组的意义</p>
<ul>
<li>$SA[i]$：长度为$2len$时排名为$i$的后缀所在位置</li>
<li>$Rank[i]$：长度为$len$时第$i$个后缀的排名，即长度为$2len$时第$i$个后缀第一关键字的排名</li>
<li>$tp[i]$：长度为$2len$时第二关键字排名为$i$的后缀所在位置</li>
</ul>
<p>我们先用一个桶（$tax$数组）统计第一关键字出现次数，并对其做前缀和，得到“第一关键字比我小”的后缀有多少个</p>
<p>然后我们<strong>从大到小</strong>枚举第二关键字（$tp$），由$Rank[tp[i]]$定位到其第一关键字的桶中位置，此时$tax[Rank[tp[i]]]$就表示当第一关键字相同时，第二关键字更大的后缀的排名，以此更新$SA$数组的值。</p>
<p>这是后缀数组构建中最难理解的一部分，但同时也是其精华所在。</p>
<h4 id="SA构建部分代码"><a href="#SA构建部分代码" class="headerlink" title="SA构建部分代码"></a>SA构建部分代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Radix_Sort</span><span class="params">(<span class="keyword">int</span> S)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= S; ++i) tax[i] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) tax[Rank[i]]++;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= S; ++i) tax[i] += tax[i - <span class="number">1</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; --i) SA[tax[Rank[tp[i]]]--] = tp[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Build_SA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> Size = <span class="number">300</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) Rank[i] = str[i] - <span class="string">'0'</span> + <span class="number">1</span>, tp[i] = i;</span><br><span class="line">	Radix_Sort(Size);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> len = <span class="number">1</span>, p = <span class="number">0</span>; p &lt; n; Size = p, len &lt;&lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n - len + <span class="number">1</span>; i &lt;= n; ++i) tp[++p] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="keyword">if</span> (SA[i] &gt; len) tp[++p] = SA[i] - len;</span><br><span class="line">        Radix_Sort(Size);</span><br><span class="line">        <span class="built_in">std</span>::swap(Rank, tp);</span><br><span class="line">        Rank[SA[<span class="number">1</span>]] = p = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) Rank[SA[i]] = tp[SA[i]] == tp[SA[i - <span class="number">1</span>]] &amp;&amp; tp[SA[i] + len] == tp[SA[i - <span class="number">1</span>] + len] ? p : ++p;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此外，必须一提的是，后缀数组的构建方法并不止倍增法这一种，SA-IS和DC3两种算法都能在$\mathcal {O} (n)$的复杂度内构建出后缀数组，但由于本人太菜不会，这里就不做更多介绍了。</p>
<blockquote>
<h2 id="SA的性质"><a href="#SA的性质" class="headerlink" title="SA的性质"></a>SA的性质</h2></blockquote>
<p>说完了后缀数组的构建方法，我们得了解它的一些有用的性质。可以说前面的所有都在为这一部分铺垫而已，以下后缀数组的真正精髓。</p>
<h4 id="一些定义-1"><a href="#一些定义-1" class="headerlink" title="一些定义"></a>一些定义</h4><p>$\text{lcp} (x, y)$：表示字符串$x$和字符串$y$的最长公共前缀</p>
<p>$height$数组：定义$height[i] = len(\text{lcp} (\text{Suffix} (SA[i - 1]), \text{Suffix} (SA[i])))$，即排名相邻的后缀的最长公共前缀长度。特别地，$height[1] = 0$</p>
<p>$H$数组：定义$H[i] = height[Rank[i]]$，即$i$号后缀与其前一名后缀的最长公共前缀长度</p>
<p>有一个比较显然的事实：对于满足$Rank[i] &lt; Rank[j]$的$(i, j)$，有<br>$$<br>lcp(i, j) = \min ^j _ {k = i + 1} \left( height[Rank[k]] \right)<br>$$<br>感性理解一下就行了吧</p>
<h4 id="height数组求法"><a href="#height数组求法" class="headerlink" title="height数组求法"></a>height数组求法</h4><p>首先给出一个定理<br>$$<br>H[i] \ge H[i - 1] - 1<br>$$<br>证明（部分引自论文）：</p>
<p>​        首先$H[i - 1] \le 1$时显然成立</p>
<p>​        否则，假设$\text{Suffix} (k)$是排在$\text{Suffix} (i - 1)$前一名的后缀，那么他们的$\text{lcp} $长度为$H[i -  1]$。因为$H[i - 1] &gt; 1$（<strong>这很关键</strong>），所以$\text{Suffix} (k + 1)$一定会排在$\text{Suffix} (i)$之前（由$\text{Suffix} (k)$和$\text{Suffix} (i - 1)$各自去掉首位，这对排名的相对关系不会有影响），并且我们还能发现$\text{lcp} (\text{Suffix(k + 1)},\text{Suffix(i)})$为$H[i - 1] - 1$，同样从去掉首位得来。那么为什么$H[i]$一定不小于$H[i - 1] - 1$呢？可以肯定的一点是，排在$\text{Suffix} (i)$前一名的后缀一定会比$\text{Suffix(k + 1)}$更加靠近$i$（除非$k$就是$i$的前一名），并且排名离$\text{Suffix(i)}$更近的后缀与$i$的相似度一定会更高，因此$H[i - 1] - 1$为下界，原命题得证。</p>
<p>知道了这个定理后有什么用呢？</p>
<p>根据$H[i] \le H[i - 1] - 1$可以发现$H$数组是<strong>近乎单调</strong>的，我们因此便可$\mathcal{O}(n)$求出$H$数组，进而求出$height$数组。</p>
<h4 id="height构建部分代码"><a href="#height构建部分代码" class="headerlink" title="height构建部分代码"></a>height构建部分代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Build_Height</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> H = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Rank[i] == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (H &gt; <span class="number">0</span>) --H;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = SA[Rank[i] - <span class="number">1</span>]; str[i + H] == str[j + H]; ++H);</span><br><span class="line">        height[Rank[i]] = H;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<h2 id="SA的应用"><a href="#SA的应用" class="headerlink" title="SA的应用"></a>SA的应用</h2></blockquote>
<p>当然，只有应用的多样性才能说明$SA$的<strong>强大</strong></p>
<ol start="0">
<li><p>最长公共前缀</p>
<blockquote>
<p> 给定一个字符串，询问某两个后缀的最长公共前缀</p>
</blockquote>
<p>上文已有提及，为$\displaystyle \min _{i = Rank[x] + 1} ^ {Rank[y]} height[i]$，转化为区间最值问题，用$\text{RMQ}$可做到$\mathcal {O} (1)$。</p>
</li>
</ol>
<ol>
<li><p>可重叠最长重复字串</p>
<blockquote>
<p> 给定一个字符串，求出最长的重复出现的子串。可重叠</p>
</blockquote>
<p>因为可重叠，答案就是$height$数组中的最大值。</p>
</li>
</ol>
<ol start="2">
<li><p>不可重叠最长重复字串</p>
<blockquote>
<p>给定一个字符串，求出最长的重复出现的子串。不可重叠</p>
</blockquote>
<p>比前一个稍微麻烦些。二分答案，判断有没有重复出现的长度为$k$的子串。首先将排序后的后缀进行分组（如下图），每一组之间$height$值不小于$k$，那么对于同一组的后缀，如果出现的$SA$的最大值与最小值之差同样不小于$k$，则存在（$SA$的差可视为后缀间的距离，注意只需一组满足即可）。</p>
</li>
</ol>
<p><img src="https://s2.ax1x.com/2019/10/07/uRS3Z9.png" alt="img"></p>
<ol start="3">
<li><p>可重叠的$k$次最长重复字串</p>
<blockquote>
<p>给定一个字符串，求至少出现$k$次的最长重复子串。可重叠</p>
</blockquote>
<p>同样二分答案并进行分组。如果某一组中有至少$k$（题目中的$k$）个后缀，则存在。</p>
</li>
<li><p>不相同子串的个数</p>
<blockquote>
<p>给定一个字符串，求不相同的子串的个数</p>
</blockquote>
<p>每个子串唯一对应某个后缀的前缀。考虑一个后缀$i$对答案的贡献。它在不计重复的情况下会产生$n - i + 1$个前缀，即子串。而其中重复的个数为$H[i] = height[Rank[i]]$，即与排在它前面的后缀的$\text{lcp}$长度。从而答案为$\displaystyle \sum _ {i = 1} ^ n n - i + 1 - height[Rank[i]]$</p>
</li>
<li><p>第$k$大子串</p>
<blockquote>
<p>给定一个字符串，求出其字典序第$k$大子串</p>
</blockquote>
<p>从小到大枚举$SA_i$，这个后缀会产生$n - SA_i + 1 - height[i]$个不同子串，若大于$k$则输出，否则将$k$减去即可。</p>
</li>
<li><p>最长回文子串</p>
<blockquote>
<p>给定一个字符串，求其最长回文子串</p>
</blockquote>
<p>我们将字符串倒过来接在原串后面（中间隔上特殊字符），然后枚举每一位，对原串和反串的相应后缀求$\text{lcp}$，取最大值即可。具体可参考下图。</p>
</li>
</ol>
<p><img src="https://s2.ax1x.com/2019/10/07/uR0HSJ.jpg" alt="uR0HSJ.jpg"></p>
<ol start="7">
<li><p>最长公共子串</p>
<blockquote>
<p> 给定两个字符串$A$和$B$，求它们的最长公共子串</p>
</blockquote>
<p>做法同回文串有异曲同工之妙。将$B$串接在$A$串后面，以特殊字符相隔，枚举每一名后缀，如果它的前一名和它来自不同的字符串，那么就以$height$值更新答案。</p>
</li>
</ol>
<p>常用的就这些了。。。吧？当然这只是后缀数组的应用中最基础的一部分，这里只做简短的介绍。总而言之，后缀数组是非常棒的字符串结构，在处理一类字符串问题时都有非常好的效果。值得掌握。</p>
<hr>
<h4 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h4><blockquote>
<p>IOI2009国家集训队论文：<a href="https://wenku.baidu.com/view/ed1be61e10a6f524ccbf85fd.html" target="_blank" rel="noopener">后缀数组-处理字符串的有力工具</a></p>
<p>另一篇帮助很大的文章：<a href="https://www.cnblogs.com/zwfymqz/p/8413523.html" target="_blank" rel="noopener">后缀数组详解-自为风月马前卒</a></p>
</blockquote>
]]></content>
      <categories>
        <category>算法&amp;&amp;学习笔记</category>
      </categories>
      <tags>
        <tag>后缀数组</tag>
      </tags>
  </entry>
  <entry>
    <title>Code+ #1 Yazid的新生舞会</title>
    <url>/2019/10/03/Code-1-Yazid%E7%9A%84%E6%96%B0%E7%94%9F%E8%88%9E%E4%BC%9A/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problem/P4062" target="_blank" rel="noopener">Code+ #1 Yazid的新生舞会</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>给定长度为$n (n \le 5 \times 10 ^ 5)$的序列，求满足区间$[l, r]$众数出现次数严格大于$\displaystyle \frac {r - l + 1} {2}$的子区间个数</p>
<a id="more"></a>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>考虑分治</p>
<p>对于$[L, R]$以及$Mid$，我们想办法统计经过$Mid$的区间的答案</p>
<p>首先求出所有可能的众数，这个可以$\mathcal{O} (n)$求出</p>
<p>然后将式子转化一下，枚举所有众数，设当前数为$x$<br>$$<br>cnt \gt \lfloor \frac {r - l + 1} {2} \rfloor<br>$$</p>
<p>$$<br>2cnt \gt r - l + 1<br>$$</p>
<p>可以将$cnt$拆成两部分<br>$$<br>2cnt_{L \sim r} - 2cnt_{L \sim {l - 1}} &gt; r - L - (l - 1 - L)<br>$$</p>
<p>$$<br>cnt_{L \sim r} - (r - L + 1 - cnt_{L \sim r}) &gt; cnt_{L \sim l - 1} - (l - 1 - L + 1 - cnt_{L \sim l - 1})<br>$$</p>
<p>发现不等号右边那个部分可以通过枚举$L \sim Mid$全部求出来，统计的时候求个前缀和即可</p>
<p>复杂度$\mathcal {O} (n \log ^ 2 n)$</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x = <span class="number">0</span>; <span class="keyword">char</span> c = getchar();</span><br><span class="line">	<span class="keyword">for</span> (; c &lt; <span class="number">48</span> || c &gt; <span class="number">57</span>; c = getchar());</span><br><span class="line">	<span class="keyword">for</span> (; c &gt;= <span class="number">48</span> &amp;&amp; c &lt;= <span class="number">57</span>; c = getchar()) x = x * <span class="number">10</span> + (c ^ <span class="number">48</span>);</span><br><span class="line">	<span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span>;</span><br><span class="line"><span class="keyword">int</span> n, a[N + <span class="number">5</span>], cnt[N + N + <span class="number">5</span>];</span><br><span class="line">LL ans;</span><br><span class="line"><span class="keyword">bool</span> vis[N + <span class="number">5</span>];</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; Vec;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Solve</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (L == R) <span class="keyword">return</span> (<span class="keyword">void</span>) (++ans);</span><br><span class="line">	<span class="keyword">int</span> Mid = (L + R) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">	Solve(L, Mid);</span><br><span class="line">	Solve(Mid + <span class="number">1</span>, R);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = Mid; i &gt;= L; --i)</span><br><span class="line">		<span class="keyword">if</span> (++cnt[a[i]] &gt; (Mid - i + <span class="number">1</span>) / <span class="number">2</span> &amp;&amp; vis[a[i]] == <span class="literal">false</span>) &#123;</span><br><span class="line">			Vec.push_back(a[i]);</span><br><span class="line">			vis[a[i]] = <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = Mid + <span class="number">1</span>; i &lt;= R; ++i)</span><br><span class="line">		<span class="keyword">if</span> (++cnt[a[i]] &gt; (i - Mid) / <span class="number">2</span> &amp;&amp; vis[a[i]] == <span class="literal">false</span>) &#123;</span><br><span class="line">			Vec.push_back(a[i]);</span><br><span class="line">			vis[a[i]] = <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = L; i &lt;= R; ++i) &#123;</span><br><span class="line">		cnt[a[i]] = <span class="number">0</span>;</span><br><span class="line">		vis[a[i]] = <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> x : Vec) &#123;</span><br><span class="line">		<span class="keyword">int</span> tot = R - L + <span class="number">1</span>, Max = tot, Min = tot;</span><br><span class="line">		cnt[tot] = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = L; i &lt; Mid; ++i) &#123;</span><br><span class="line">			tot += a[i] == x ? <span class="number">1</span> : <span class="number">-1</span>;</span><br><span class="line">			++cnt[tot];</span><br><span class="line">			Max = <span class="built_in">std</span>::max(Max, tot);</span><br><span class="line">			Min = <span class="built_in">std</span>::min(Min, tot);</span><br><span class="line">		&#125;</span><br><span class="line">		tot += a[Mid] == x ? <span class="number">1</span> : <span class="number">-1</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = Min; i &lt;= Max; ++i) cnt[i] += cnt[i - <span class="number">1</span>];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = Mid + <span class="number">1</span>; i &lt;= R; ++i) &#123;</span><br><span class="line">			tot += a[i] == x ? <span class="number">1</span> : <span class="number">-1</span>;</span><br><span class="line">			ans += cnt[<span class="built_in">std</span>::min(Max, tot - <span class="number">1</span>)];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = Min; i &lt;= Max; ++i) cnt[i] = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	Vec.clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	n = read(), read();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">		a[i] = read();</span><br><span class="line">	Solve(<span class="number">1</span>, n);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>分治</tag>
      </tags>
  </entry>
  <entry>
    <title>Codeforces1128D Complete Tripartite</title>
    <url>/2019/09/30/Codeforces1128D-Complete-Tripartite/</url>
    <content><![CDATA[<p><a href="https://codeforces.com/contest/1228/problem/D" target="_blank" rel="noopener">Codeforces1128D Complete Tripartite</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>一个$n$个顶点，$m$条边的无向图，保证无重边与自环，不保证连通</p>
<p>设$v_1, v_2 \subseteq V$是两个不相交的非空点集，定义$f(v_1, v_2)$在满足以下所有条件时为真：</p>
<ul>
<li>$v_1$中的点之间不存在边</li>
<li>$v_2$中的点之间不存在边</li>
<li>对于任意分别在$v_1, v_2$中的每一对点$(x, y)$之间均有边</li>
</ul>
<p>问能否将$V$分为三个非空的，不相交的点集$v_1, v_2, v_3$使得$f(v_1, v_2), f(v_2, v_3), f(v_1, v_3)$均为真</p>
<p>若能则输出每个点所在的点集，否则输出$-1$</p>
<a id="more"></a>

<h2 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h2><p>$3 \le n \le 10 ^ 5,\ 0 \le m \le \min(3 \cdot 10 ^ 5,\frac {n(n - 1)} {2})$</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>首先阐述一下官方做法的核心：和一个点$u$没有边相连的所有点都应与$u$在同一个集合中</p>
<p>但是这种做法细节非常多（至少对于考场上完全不注意细节的我是致命性的）</p>
<p>现在提供一种非常无脑、几乎没有细节的哈希做法，复杂度与标算一样，但是编写简单度把标算吊起来打</p>
<p>稍微思索一下可以发现的一点是：同一集合的所有点，它们有边相连的点构成的集合是相同的</p>
<p>然后我们可以将点的集合转变为哈希值，直接统计比较即可</p>
<p>下面的代码证明了这种做法能够很好地通过此题</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>, Base = <span class="number">31</span>, Mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, cnt;</span><br><span class="line">LL Hash[N + <span class="number">5</span>], Val[N + <span class="number">5</span>];</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">map</span> &lt;LL, <span class="keyword">int</span>&gt; Bel;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = Hash[<span class="number">0</span>] = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        Hash[i] = Hash[i - <span class="number">1</span>] * Base % Mod;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, u, v; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">        Val[u] = (Val[u] + Hash[v]) % Mod;</span><br><span class="line">        Val[v] = (Val[v] + Hash[u]) % Mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Val[i] == <span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">"-1"</span>), <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (Bel[Val[i]] == <span class="number">0</span>) Bel[Val[i]] = ++cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cnt != <span class="number">3</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">"-1"</span>), <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, Bel[Val[i]]);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">""</span>), <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>哈希</tag>
      </tags>
  </entry>
  <entry>
    <title>Codeforces1228E Another Filling the Grid</title>
    <url>/2019/09/30/Codeforces1228E-Another-Filling-the-Grid/</url>
    <content><![CDATA[<p><a href="https://codeforces.com/contest/1228/problem/E" target="_blank" rel="noopener">Codeforces1228E Another Filling the Grid</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>给定一个$n \times n(1 \le n \le 250)$的矩阵，用$1 \sim k(1 \le k \le 10 ^ 9)$的数进行填充，每行每列最小值为$1$</p>
<p>求方案数</p>
<a id="more"></a>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>$f(i, j)$为至少有$i$行$j$列没有$1$的方案数</p>
<p>没有$1$的位置有$n (i + j) - i \cdot j$个，随便填的位置有$n ^ 2 - n(i + j) + i \cdot j$个</p>
<p>考虑全集$U$，即全部随便填，方案数为$k^{n ^ 2}$，即$f(0, 0)$</p>
<p>但这样不满足限制，需减去至少有一行或一列没有$1$的方案数，以满足一行（列）的限制</p>
<p>因为行列枚举必然会有重复，我们要再次加上重复的部分…以此类推</p>
<p>进行容斥，不难得到<br>$$<br>ans = \sum_{i = 0} ^n \sum_{j = 0} ^n f(i, j) \ =\sum _{i = 0} ^n \sum _{j = 0} ^n (-1) ^ {i + j} \cdot \binom {n} {i} \cdot \binom {n} {j} \cdot k ^ {n ^ 2 - n(i + j) + i \cdot j} \cdot (k - 1) ^ {n (i + j) - i \cdot j}<br>$$<br>这个时候已经可以$\mathcal {O}(n ^ 2 \log n)$做了，但是我们可以将其优化到$\mathcal {O}(n \log n)$</p>
<p><del>然而我太菜了不会优化，留个坑</del></p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>, Mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n, K, fac[N + <span class="number">5</span>], D1[N + <span class="number">2</span>][N + <span class="number">2</span>], D2[N + <span class="number">2</span>][N + <span class="number">2</span>], com[N + <span class="number">2</span>], ans;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; y; x = <span class="number">1L</span>L * x * x % Mod, y &gt;&gt;= <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> (y &amp; <span class="number">1</span>) res = <span class="number">1L</span>L * res * x % Mod;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Inv</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> qpow(x, Mod - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1l</span>l * fac[n] * Inv(fac[m]) % Mod * Inv(fac[n - m]) % Mod;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;K);</span><br><span class="line">    fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) fac[i] = <span class="number">1l</span>l * i * fac[i - <span class="number">1</span>] % Mod;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">            <span class="keyword">int</span> tmp = <span class="number">1L</span>L * qpow(K, i * j) * C(n, i) % Mod * C(n, j) % Mod * qpow(K - <span class="number">1</span>, n * n - i * j) % Mod;</span><br><span class="line">            <span class="keyword">if</span> ((i + j) &amp; <span class="number">1</span>) ans = (ans - tmp + Mod) % Mod;</span><br><span class="line">            <span class="keyword">else</span> ans = (ans + tmp) % Mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>组合数学</tag>
        <tag>容斥</tag>
      </tags>
  </entry>
  <entry>
    <title>Codeforces79D Password</title>
    <url>/2019/09/30/Codeforces79D-Password/</url>
    <content><![CDATA[<p><a href="https://codeforces.com/contest/79/problem/D" target="_blank" rel="noopener">Codeforces79D Password</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>你有$n$个一开始都为灭的灯泡，排成一排</p>
<p>同时你有$l$个长度，分别为$a_1 \sim a_l$</p>
<p>每次你可以选择一段连续子序列，长度为某个$a_i$，将这些灯泡的状态改变（亮变灭，灭变亮）</p>
<p>你可以做任意多次，使得最后有且仅有$k$个位置的灯泡是亮的，这些位置已经给定，为$x_1 \sim x_k$</p>
<p>求最小次数</p>
<h2 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h2><p>$1 \le n \le 10000,1 \le k \le 10, 1 \le \ l \le 100$</p>
<a id="more"></a>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>最短路&amp;&amp;状压，比较巧妙的好题</p>
<p>将原目标序列<strong>异或差分</strong>，我们会得到偶数个，且不大于$2k$个$1$</p>
<p>考虑每次修改，这不会改变修改区间中间的$01$状态，只会改变首尾，且改变的$1$数量一定是偶数</p>
<p>我们的目标就是通过这样的操作使差分序列中的若干$0$变成$1$</p>
<p>具体考虑修改的影响：设修改区间为$[l, r]$，那么差分序列中会取反的两个位置是$l$和$r + 1$</p>
<ol>
<li>如果是两个$1$，那么它们都会变成$0$，这只会纯粹地增加操作次数，没有任何意义</li>
<li>如果是两个$0$，那么它们都会变成$1$</li>
<li>如果是一个$1$一个$0$，那它们会交换，本质上是$1$的移动</li>
</ol>
<p>我们可以发现，上面的$2$操作能让我们得到两个$1$，而$3$操作则能让我们将$1$移动到我们想要的位置上</p>
<p>并且我们还能发现，这里的$1$都是成对出现的，这与差分数组中的“偶数个$1$”这个条件非常契合</p>
<p>即，我们每次选两个为$0$位置将它们变成$1$，若干次之后达到目标状态</p>
<p>考虑到$k$非常小$(\le 10)$，可以考虑用状压枚举状态进行$\texttt{dp}$</p>
<p>具体来说，我们可以钦定一个位置为$1$（这同时会为我们带来另一个$1$），看看它移动到其他位置的最小次数，实现转移</p>
<p>至于最小的操作次数，跑个最短路不就行了吗？</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span>, M = <span class="number">21</span>, L = <span class="number">1e2</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, l, size, a[L + <span class="number">5</span>], cnt[<span class="number">1</span> &lt;&lt; M], Dis[N + <span class="number">5</span>], dis[M + <span class="number">5</span>][M + <span class="number">5</span>], dp[<span class="number">1</span> &lt;&lt; M];</span><br><span class="line"><span class="keyword">bool</span> light[N + <span class="number">5</span>];</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; Vec;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">queue</span> &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Bfs</span><span class="params">(<span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">memset</span>(Dis, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(Dis));</span><br><span class="line">	q.push(Vec[s]), Dis[Vec[s]] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (q.empty() == <span class="literal">false</span>) &#123;</span><br><span class="line">		<span class="keyword">int</span> u = q.front();</span><br><span class="line">		q.pop();</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= l; ++i) &#123;</span><br><span class="line">			<span class="keyword">if</span> (u - a[i] &gt;= <span class="number">1</span> &amp;&amp; Dis[u] + <span class="number">1</span> &lt; Dis[u - a[i]]) &#123;</span><br><span class="line">				Dis[u - a[i]] = Dis[u] + <span class="number">1</span>;</span><br><span class="line">				q.push(u - a[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (u + a[i] &lt;= n + <span class="number">1</span> &amp;&amp; Dis[u] + <span class="number">1</span> &lt; Dis[u + a[i]]) &#123;</span><br><span class="line">				Dis[u + a[i]] = Dis[u] + <span class="number">1</span>;</span><br><span class="line">				q.push(u + a[i]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; ++i)</span><br><span class="line">		dis[s][i] = Dis[Vec[i]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n, &amp;m, &amp;l);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, pos; i &lt;= m; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;pos);</span><br><span class="line">		light[pos] = <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= l; ++i)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">	<span class="built_in">std</span>::sort(a + <span class="number">1</span>, a + <span class="number">1</span> + l);</span><br><span class="line">	l = <span class="built_in">std</span>::unique(a + <span class="number">1</span>, a + <span class="number">1</span> + l) - a - <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n + <span class="number">1</span>; ++i)</span><br><span class="line">		<span class="keyword">if</span> (light[i] ^ light[i - <span class="number">1</span>])</span><br><span class="line">			Vec.push_back(i);</span><br><span class="line">	size = (<span class="keyword">int</span>) Vec.size();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; ++i)</span><br><span class="line">		Bfs(i);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">1</span> &lt;&lt; size; ++i)</span><br><span class="line">		cnt[i] = cnt[i ^ (i &amp; -i)] + <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">std</span>::<span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">	dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1</span> &lt;&lt; size; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (dp[i] == <span class="number">0x3f3f3f3f</span> || i + <span class="number">1</span> == (<span class="number">1</span> &lt;&lt; size)) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (; (i &amp; (<span class="number">1</span> &lt;&lt; pos)) != <span class="number">0</span>; ++pos); <span class="comment">// 钦定最右边的0位变为1并找出其位置</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = pos + <span class="number">1</span>; j &lt; size; ++j) <span class="comment">// 枚举另一个0的位置</span></span><br><span class="line">			<span class="keyword">if</span> ((i &amp; (<span class="number">1</span> &lt;&lt; j)) == <span class="number">0</span>)</span><br><span class="line">				dp[i | (<span class="number">1</span> &lt;&lt; pos) | (<span class="number">1</span> &lt;&lt; j)] = <span class="built_in">std</span>::min(dp[i | (<span class="number">1</span> &lt;&lt; pos) | (<span class="number">1</span> &lt;&lt; j)], dp[i] + dis[pos][j]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[(<span class="number">1</span> &lt;&lt; size) - <span class="number">1</span>] == <span class="number">0x3f3f3f3f</span> ? <span class="number">-1</span> : dp[(<span class="number">1</span> &lt;&lt; size) - <span class="number">1</span>]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>状态压缩</tag>
        <tag>最短路</tag>
      </tags>
  </entry>
  <entry>
    <title>XJOI训练28</title>
    <url>/2019/09/29/XJOI%E8%AE%AD%E7%BB%8328/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="点此输入密码后，按Enter查看文章" />
    <label for="hbePass">点此输入密码后，按Enter查看文章</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="47a3b305cf1d758b27dbc304dec1fa367aa62ef7c711a21be47c22ee0444b9fe"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>比赛</category>
      </categories>
  </entry>
  <entry>
    <title>洛谷P4869 albus就是要第一个出场</title>
    <url>/2019/09/29/%E6%B4%9B%E8%B0%B7P4869-albus%E5%B0%B1%E6%98%AF%E8%A6%81%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%87%BA%E5%9C%BA/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problem/P4869" target="_blank" rel="noopener">洛谷 P4869 albus就是要第一个出场</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>已知一个长度为$n$的正整数序列$A$（下标从$1$开始），令$S = { x|x \le x \le n }$，$S$的幂级$2^S$定义为$S$所有子集构成的集合。定义映射$f:2^S \rightarrow Z$，$f( \emptyset ) = 0$，$f(T) = XOR { A _ t },(t \in T)$</p>
<p>现在$albus$把$2^S$中每个集合的$f$值计算出来， 从小到大排成一行， 记为序列$B$（下标从$1$开始）。</p>
<p>给定一个数， 那么这个数在序列$B$中第$1$次出现时的下标是多少呢？</p>
<a id="more"></a>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>令长度为$n$正整数序列$A$的线性基为$B$，非线性基中元素构成集合为$C$</p>
<p>定义集合$F = { f(T) | T \subseteq 2^S }$</p>
<p>有结论</p>
<ul>
<li><p>对于任意元素$a \in F$，$a$的出现次数均为$2 ^ {n - |B|}$</p>
</li>
<li><p>证明：</p>
<p>首先$a$可以由$B$中若干元素唯一表出，设这些元素构成的集合为$D$</p>
<p>考虑集合$C$任意子集$E$，我们想在$B$中找到一个子集使其与$E$的异或和<strong>恰好</strong>为$a$</p>
<ul>
<li>若$D$与$E$有交集，那么我们先将$D$中的相交元素直接替换为$E$中的相同元素，这样一来$D$与$E$就没有交集了</li>
<li>$D$与$E$没有交集，我们一定可以在$B$中<strong>另找</strong>一个子集$G$使得$XOR { E } = XOR { G  }$，那么$XOR { E } \ xor\ XOR { G } \ xor\ XOR{ D } = XOR {D } = a$</li>
</ul>
</li>
</ul>
<p>证毕</p>
<p>知道了这一结论后，我们通过数$x$的排名便可知道它第一次出现的次数</p>
<p>时间复杂度为$\mathcal {O} (n \log n)$，瓶颈在线性基的插入</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Mod = <span class="number">10086</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Linear_Base</span> &#123;</span></span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">31</span>;</span><br><span class="line">	<span class="keyword">int</span> n, Size, p[N + <span class="number">2</span>];</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = N; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">			<span class="keyword">if</span> ((x &gt;&gt; i) &amp; <span class="number">1</span>) &#123;</span><br><span class="line">				<span class="keyword">if</span> (p[i] == <span class="number">0</span>) &#123;</span><br><span class="line">					p[i] = x, ++Size;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				x ^= p[i];</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125; S;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n, q;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, x; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">		S.Insert(x);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;q);</span><br><span class="line">	<span class="keyword">int</span> Rank = <span class="number">0</span>, Cnt = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, tmp = <span class="number">1</span>; i &lt;= <span class="number">30</span>; ++i)</span><br><span class="line">		<span class="keyword">if</span> (S.p[i] != <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> ((q &gt;&gt; i) &amp; <span class="number">1</span>) (Rank += tmp) %= Mod;</span><br><span class="line">			tmp &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n - S.Size; ++i) Cnt = <span class="number">2</span> * Cnt % Mod;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (<span class="number">1L</span>L * Cnt * Rank + <span class="number">1</span>) % Mod);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>线性基</tag>
      </tags>
  </entry>
  <entry>
    <title>XJOI训练25</title>
    <url>/2019/09/28/XJOI%E8%AE%AD%E7%BB%8325/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="点此输入密码后，按Enter查看文章" />
    <label for="hbePass">点此输入密码后，按Enter查看文章</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="f4d0030b4a522c9576ed1338b45e9a89d8bd702db64695bae4d52e1d4523caa1"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>比赛</category>
      </categories>
  </entry>
  <entry>
    <title>XJOI训练27</title>
    <url>/2019/09/28/XJOI%E8%AE%AD%E7%BB%8327/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="点此输入密码后，按Enter查看文章" />
    <label for="hbePass">点此输入密码后，按Enter查看文章</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="19a07c3499cd88b2b15cefe67daa7d77bd7ef78d0e50f94d3c4247545a25d903"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>比赛</category>
      </categories>
  </entry>
  <entry>
    <title>XJOI训练26</title>
    <url>/2019/09/28/XJOI%E8%AE%AD%E7%BB%8326/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="点此输入密码后，按Enter查看文章" />
    <label for="hbePass">点此输入密码后，按Enter查看文章</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="ea2bfc051c90a2a3010c326c7b4bf50bfc276fa811df5d4fbcae50b3c2b4d9ba"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>比赛</category>
      </categories>
  </entry>
  <entry>
    <title>本博客搭建过程的点滴</title>
    <url>/2019/09/28/%E6%9C%AC%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E7%9A%84%E7%82%B9%E6%BB%B4/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="点此输入密码后，按Enter查看文章" />
    <label for="hbePass">点此输入密码后，按Enter查看文章</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="bdd08341c0e9c4cb95a12aa527505156001a0c1ef2d8f0e45cd470ab6ccb16fe">1c200bc3eab36bdc5e0e7b3cc6d2110bd913c6b396054593deaf3cf4be408db18bf369537dc88b6466a8d7e19c3021937387f96d52a1cee6366beffdf75a12fff71055f52a7b6e59b25faa0b6563d61e46b53dfd78257cd14cfbcaec0f003b09b38a00a18d4f8f64797ee07c5cdb08380f3920eeda05971c2fb23cd5f39b83a9d8babdbd84626649cbb05ed545e6dce65cf2ff369f82442d10e7623994f33bf26e8397a67b1cccf075f4be7f8aad77794114d9f97fe8db7278778315a2d82547c0cd987a0863828ad5940c9770fcc1268a3a16d73aef789ce4b11d678d5732e7e61b0f3b9f5ea2914d901499c9fb40ce91488c76f961be339ec27809c8497ea31e3f534d0d3856fc48cd41fc9d1829a2421948c1d76d43181e7606bbb133ab45322e526832d520ddb36a8f94b093c6c74bfba3c2f6da109f39e708f7b1b870e014c19381b25a83456687fa97fe5db46319847f297f790d68f40febec7925c48f56ab494bfde5344a66f2677d4db68e841d67adce050f01215379f892931a410595bbca0696cc8132c151f407eb4d4968a04d88327c2e5745e53e55c32f9941a6ce01056af43f74398dc17f9b029b41b06cee424d3e787dc73efc0fe2031fbc40bc3759122dc5d3f93d019ea2aa8c3caba35fa7626c01f189584b01b5ebb0333ec059da0f3885d330b08d11fec6cc0a6d94236c7b62fbfd5249e15bdf40153182509ff1ec0ac4a7b2bdcc12ac75315ddec227ab6e6e3fbe0d77723f7a0ea8e12a31e2b2685e49460dbce08b5c3f61fec21659d381f1670cee1ac8ea8ee4744f0fa77e7ab79fcaa5691be3d96931520dc2d5e6ede78a1c366777e55c2fad8463ad991716589b7c638ace0a84a24af1dd342cba6b4d9098879decde0db7087f225a7dc420e24016ab89ff0d4ca09d641f282eceb07736cd19b2efc9a32dccd2a7bca56d958638525eb7f00002245db5c2cf95cdae33999215d3aa228f20c08e0c2d4a61af097f312f199edbfb5ae2ac315847c1eb1b6de861a0fa648df891cf40b581390121b2f6b2a82f14b65d33d9a1f4545333fbe66ecb7471fbedcb357f0f18397766b44d356ae3d050c8136ee3ef095010bb0ac74dcb76495a7d761779e68e97ca7067b2788f2d7fe079df6e482707c462bc16bfd688e899e53959df2d1bd2249fd79508428920e1af9c08f6161069477139c8c79a1ef7a5c5f285a89e0f7804ea80bc09804f456978522f09749d60f9e0c1e2bd4277f0c3862ad9fc820ab47c96d39bba41d8c7388ab78b21af310164471ed9ec33eb04833aef2baf54b404cfa8d6f29b241e8c5568b8d9fb7ea7de2f4d519e2a255e63ac3f26c83e9c99636f678d2005d83f20f765263e4b3749d4e8af7048190c52934b2603030216d3bccebde7a59d91ed20adcd03c30a975171be43bf14841180bd943da2445ae80258c23a41242e62e9eec5161b5cc726a43b3a44fa9a4f7b5145cd146113f5b1a3758853c6bbc5c110ee920867b738037345b6be5d0d8907e2210e949ffab71c91a9953f4395268c7f235246d7e47cd491bee9726a5ce1c29666f76af84fbb2eaf1f7487b3a8635fac58d2ff185e8aa1ebf48e3f8ffd043fdf7c88dc2f0349995d8d1bda3477f07cb8375864694e73554594784fa87434bc28780b52e731d0765933e597ef8bb1c45bd8d0afc2a343f8a22999c040a20da84f5de9190d64e8f9eee31edb300e76b39684b202dbbd3ba88fb5c89acc1f1ba8d6af4f7f7def8e395f040cd2ca017ea1a2c66a62358d5267440ba5459938a5d6db79102b32efca73e085be8eadb49ba125b830733a0f6d7c9b14f21eab1557da5b349396f7bca77bf88b71bedf57c1512c1c84cbf3a1c4b7f5bea56b7d87bce933b1f2c5bf4eebb7aef970a275b774c7042ec8ea9617d5c935ca796b5ae62f243eaa3b94fcf1c5df0050eba5aa30895324be2a8b0a617331e150f47f822d54520eaf52b059b97114e7fefff079dea90890a447ba24fb3e16bbb8464991e91a663c139f725cb9a744e4e64a2f3436f3ec5fe436a9321d4cd27f3e035b703c1cab097d4debb15ed0a4b83a2af89ac8aab4682a3d01fd0cd8edb66d517a68770ba54e548187b0a8967e719c0470ac62c9d235eab13945abde652873fa30fe85f62e7e418df9d58428c82625d0bdd13435af671692078e95ec660ab30b40fb90e2d474bc836882d901dce316c9ee640542b0136e60345d8e3d453d2c8b870d5dd606bbbe4e82b596eb43c106091f9d82ca245f769bd02431331aa5d4e4f527237710b74ada2c69728958be3a89c72602ace5df4c0fa97f121d0a30d9480eb426730a3d5d0c29586a76732081adb12486418579984ae40f679f6e5b7dad67085a5dbfd942556d064377aeddae45154f11d3eb8118a396c9d7d5b9a2056ef3ed75a8faa3a2327819a6abb95ac62f834acc38c7297bfe42ae97e2afb453e78e32dec7d3bfe4439c1f49a55e619aadbfa30ced8789558f4d2f28fd8d990ed91df11eb15431ec31342ccffe146716fd49517464faa8421f1811133bdc8f4e35edc7e91fb4d45f07986193edea3ed92a210c071957920c9d1582aa2c4ad46c50e2d9836be79904d50d5889e1768098e226f148c91866fb033488c30a88dde2bf4a9a35b27103346da276a51f8bcc83727396e0cef003c98db375a60c97377feeaf2ea6683360f84a02f66c04ab50a60fc1b382e6046a194e0b4f324fab8db67b62281c731927aa4333f457db88e1b80303d3796094547b5c4a20350505244b2e5d8beb5aac363ba1eeac344ded377258e4ec4423d123208c2a05f1904b9fe674c899b60189585dd338f23af2251b15928874dd90fd252c68e9b2fdf97ae2c56957904a34e01127c795dac76782ddc642bb7f8e4408b220c6677c2fd6943a56b9ce9426e71cb59bcb001c5ffb27595264308168005157a168d50fa9ccd740b53983d06308ad7eaf9abc198267cbce7083bdefdd14a758612c852521a3fb8044691f908754cba47aa15a4bec4de152f7d91d0412bc5871ff687224054a6c50bebde5c04a06d25844a92397317e74e16c10d1815c537fc71d23dff314988c06d17b8d1d368885b86df14988b526cab97d9ca933d177bd1da98d1df85cb61ac0aa5e382793b4804cfc8d5b7946b37d54bb550d0fe0a3ff7eff6b0b90ac62c4f432c8037573be55a4e31e6447860fc8eed9567564d08767480d5d0c40255bab0ad0f53d7138d19654de6a0b2e36128ea55f685d1e463e857341383872ccdbbf0e40ef989f30b36932495b97dcac248f89a1c08e98f700718215bfb5dfbb5de305783aaa65a105218201e731028576123d7e39ca2cc8cacf41aa13c641e31cbf2e9e1b3f8ec7cf1a9b442453f817ce0793a5d497ba7651a476fedc95f0df9dd0ed85cbe8f8fd9a27b3368c787cfb4206a9cca56a0b4df6a78c342c8d82921be37e1c4b471710014fe620f3b9b9663e065b2e0718fc28660311fc9a0dac0363c7ef375f5f9c03cb734512549c177931f7a3acb6627c01d5193f148d2c02d8c83b61fcf92e15d54847018c9882e1fabafee8ba3d02947662958280eb5908a1e9185fc8080b52b3cd1f4829f64d502e0cf7429736465733c3e6275e7d7a08433ef6b09c2132f183395e4d0a0f2525194b41e8f88f7c993c3592e4229834a093e245ce81ce040882ee2a18a093ad2b150affb23e2ee3d1e63dc56a890df8f7822c2ca828fb7fd7579b0e20c482da561c9768bc2969b788d1b53755bdbf338970f1ff6aa5671bb2986d11aa07a2d4dc6bf5f879175643b13bbb47eade28090b12e259a63eb5048c28c0f2b5fdc9a86699c008e6e553fec9004764755c331a20d4ff0b518a0f2b6b32977c692e9e9b0f4badfcbade8364ca81f001e9deb46870349448cc7eba21b1cc57efdeedb121db0e4d90ff797af26a83b056d161faff8f43f208f570c53afa9a09326575ca39c2145e288f3ec6cbee8566f99532e04b19c3b1408312086a6e52936bf36442b3ca737a94e226e1536f126223136e986a8c5d2ee7e62b2df2a7405ffa75dd068860c7a113b00f6649a3236f84a922c86ea1d6c84d9373ab139c8e020e53aab85a1386fd585171c37c13cbc974e57053ed534c7a04d253786b6bb7ed91adaafa6144607e9a232da91b91edd0f75fd1e1ad9a7d2602ef0f4be5ae3d673c62cca9071a644eb2db9b3f8a50a6e381ab7a61d98ebe3ae50d21d6245ee0d89aead282904615abd169dff2c0c37d12850c4e26f920073a08ae6a4e9ed51a14d1a63369de6a6dabded4bc033c01155572c10fa3aa14d6424a70388566fa05c6367d18b9ebacb90ec2f495f9f886710a247b10fd5c9bb5bfdecca6f618b6d49750a231e55b6367ee5541ba10d380c2708a4c248734ecb27a1b8a6a42203962f47d01315ee0a3b32bcc1abf</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>杂</category>
      </categories>
  </entry>
  <entry>
    <title>期望入门</title>
    <url>/2019/09/28/%E6%9C%9F%E6%9C%9B%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>一些水题，部分结合了基础的高斯消元</p>
<a id="more"></a>

<h2 id="收集邮票"><a href="#收集邮票" class="headerlink" title="收集邮票"></a>收集邮票</h2><h3 id="题面"><a href="#题面" class="headerlink" title="题面"></a><a href="https://www.luogu.org/problem/P4550" target="_blank" rel="noopener">题面</a></h3><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>$f[i]$：已获得$i$种邮票，买完剩下的需要的期望次数</p>
<p>$\frac{i}{n}$的概率取到已有的，接下去仍需取$f[i]$次</p>
<p>$\frac{n - i}{n}$的概率取到未取过的，接下去需取$f[i + 1]$次</p>
<p>最后要加上这一次取的$1$次<br>$$<br>f[i] = \begin{cases}<br>0 &amp; (i == n) \<br>\frac{i}{n} \times f[i] + \frac{n - i}{n} \times f[i + 1] + 1 &amp; (0 \le i \lt n)<br>\end{cases}<br>$$<br>即<br>$$<br>f[i] = f[i + 1] + \frac{n}{n - i}<br>$$<br>$g[i]$：已获得$i$种邮票，买完剩下的需要的期望代价</p>
<p>$\frac{i}{n}$的概率取到已有的，还需要$g[i]$的代价，这对之后所有的$f[i]$次都会增加$1$的代价，还要加上这一次的代价$1$</p>
<p>$\frac{n - i}{n}$的概率取到未取过的，同上<br>$$<br>g[i] = \begin{cases}<br>0 &amp; (i == n) \<br>\frac{i}{n} \times (g[i] + f[i] + 1) + \frac{n - i}{n} \times (g[i + 1] + f[i + 1] + 1) &amp; (0 \le i \lt n)<br>\end{cases}<br>$$<br>即<br>$$<br>g[i] = \frac{i}{n - i}\times f[i] + g[i + 1] + f[i + 1] + \frac{n}{n - i}<br>$$</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> f[N + <span class="number">5</span>], g[N + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">        f[i] = f[i + <span class="number">1</span>] + <span class="number">1.0</span> * n / (n - i);</span><br><span class="line">        g[i] = <span class="number">1.0</span> * i / (n - i) * f[i] + g[i + <span class="number">1</span>] + f[i + <span class="number">1</span>] + <span class="number">1.0</span> * n / (n - i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>, g[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="六省联考2017-分手是祝愿"><a href="#六省联考2017-分手是祝愿" class="headerlink" title="[六省联考2017]分手是祝愿"></a>[六省联考2017]分手是祝愿</h2><h3 id="题面-1"><a href="#题面-1" class="headerlink" title="题面"></a><a href="https://www.luogu.org/problem/P3750" target="_blank" rel="noopener">题面</a></h3><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><p>首先发现如果每个开关最多按一次，那么要按的开关是哪些就是确定的</p>
<p>于是我们可以从$n$到$1$扫一遍将它们找出来，记个数为$num$</p>
<p>$dp[i]$表示从$i$个开关要按的状态到$(i - 1)$个开关要按的状态的期望次数</p>
<p>考虑$dp[i]$，即有$i$个开关要按</p>
<p>$i / n$的概率按对，$(n - i) / n$的概率按错</p>
<p>按对的期望是$1$次$($到$i - 1$$)$，按错的期望是$(1 + dp[i + 1] + dp[i])$次$($分别表示错按的一次、按回来的$dp[i + 1]$次以及再按到$(i - 1)$的$dp[i]$次$)$</p>
<p>那么有<br>$$<br>dp[i] = \frac {i} {n} + \frac {n - i} {n} \times (1 + dp[i + 1] + dp[i])<br>$$<br>化简后得<br>$$<br>dp[i] = \frac {n + (n - i) \times dp[i + 1]} {i}<br>$$<br>边界$dp[n] = 1$</p>
<p>最后统计答案：如果$num \le K$，那么答案为$num$，否则答案为$\sum ^{num} _{i = K + 1} dp[i]$</p>
<h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>, Mod = <span class="number">1e5</span> + <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> n, K, num, a[N + <span class="number">5</span>], Inv[N + <span class="number">5</span>], dp[N + <span class="number">5</span>], ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;K);</span><br><span class="line">	Inv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)</span><br><span class="line">		Inv[i] = <span class="number">1L</span>L * (Mod - Mod / i) * Inv[Mod % i] % Mod;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) </span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; --i)</span><br><span class="line">		<span class="keyword">if</span> (a[i] == <span class="number">1</span>) &#123;</span><br><span class="line">			++num;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j * j &lt;= i; ++j)</span><br><span class="line">				<span class="keyword">if</span> (i % j == <span class="number">0</span>) &#123;</span><br><span class="line">					a[j] ^= <span class="number">1</span>;</span><br><span class="line">					<span class="keyword">if</span> (j * j != i) a[i / j] ^= <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	dp[n] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">1</span>; --i)</span><br><span class="line">		dp[i] = <span class="number">1L</span>L * (n + <span class="number">1L</span>L * (n - i) * dp[i + <span class="number">1</span>] % Mod) * Inv[i] % Mod;</span><br><span class="line">	<span class="keyword">if</span> (num &lt;= K) ans = num;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = K + <span class="number">1</span>; i &lt;= num; ++i)</span><br><span class="line">			ans = (ans + dp[i]) % Mod;</span><br><span class="line">		ans = (ans + K) % Mod;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) ans = <span class="number">1L</span>L * ans * i % Mod;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="国家集训队-单选错位"><a href="#国家集训队-单选错位" class="headerlink" title="[国家集训队]单选错位"></a>[国家集训队]单选错位</h2><h3 id="题面-2"><a href="#题面-2" class="headerlink" title="题面"></a><a href="https://www.luogu.org/problem/P1297" target="_blank" rel="noopener">题面</a></h3><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h3><p>由于不同题目的选择之间不会有影响，我们可以考虑对每题的贡献分别计算</p>
<ul>
<li>$a_i \ge a_{i - 1}$，那么前一题无论选什么这一题都会有这个选项，这一题的答案落在$[1, a_{i - 1}]$之间的概率为$\frac {a_{i - 1}} {a_i}$，在此前提下与前一题答案一致的概率为$\frac {1} {a_{i - 1}}$，两者相乘得$\frac {1} {a_i}$</li>
<li>$a_i \lt a_{i - 1}$，那么前一题的答案落在$[1, a_i]$之间的概率为$\frac {a_i} {a_{i - 1}}$，在此前提下与这一题答案一致的概率为$\frac {1} {a_i}$，两者相乘得$\frac {1} {a_{i - 1}}$</li>
</ul>
<p>综上所述，第$i$题正确的概率为<br>$$<br>f_i = \begin{cases}<br>\frac {1} {a_i} &amp; a_i \ge a_{i - 1} \<br>\frac {1} {a_{i - 1}} &amp; a_i \lt a_{i - 1}<br>\end{cases}<br>$$</p>
<h3 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Mod = <span class="number">1e8</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> n, A, B, C, a;</span><br><span class="line"><span class="keyword">double</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d"</span>, &amp;n, &amp;A, &amp;B, &amp;C, &amp;a);</span><br><span class="line">	<span class="keyword">int</span> tmp = a, last = a % C + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		tmp = <span class="number">1L</span>L * (<span class="number">1L</span>L * tmp * A + B) % Mod;</span><br><span class="line">		<span class="keyword">int</span> cur = tmp % C + <span class="number">1</span>;</span><br><span class="line">		ans += cur &gt;= last ? <span class="number">1.0</span> / cur : <span class="number">1.0</span> / last;</span><br><span class="line">		last = cur;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> cur = a % C + <span class="number">1</span>;</span><br><span class="line">	ans += cur &gt;= last ? <span class="number">1.0</span> / cur : <span class="number">1.0</span> / last;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>, ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="HNOI2013-游走"><a href="#HNOI2013-游走" class="headerlink" title="[HNOI2013]游走"></a>[HNOI2013]游走</h2><h3 id="题面-3"><a href="#题面-3" class="headerlink" title="题面"></a><a href="https://www.luogu.org/problem/P3232" target="_blank" rel="noopener">题面</a></h3><h3 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h3><p>$f[i]$为$i$号点期望经过次数，$deg[i]$表示$i$号点度数</p>
<p>注意一旦到达$n$号点后便不再返回<br>$$<br>f[i] = \sum _{j | (i,j) \in E, j \ne n} \frac {f[j]} {deg[j]}<br>$$</p>
<p>$$<br>\sum _{j | (i,j) \in E, j \ne n} \frac {f[j]} {deg[j]} - f[i] = 0<br>$$</p>
<p>特殊地，$1$号点有$1$次的初始值<br>$$<br>f[1] = 1 + \sum _{j | (1,j) \in E, j \ne n} \frac {f[j]} {deg[j]}<br>$$</p>
<p>$$<br>\sum _{j | (1,j) \in E, j \ne n} \frac {f[j]} {deg[j]} - f[1] = -1<br>$$</p>
<p>进行高斯消元后，$g[i]$为$i$号边期望经过次数<br>$$<br>g[i] = \frac {f[u]} {deg[u]} + \frac {f[v]} {deg[v]}<br>$$<br>显然期望经过次数越多的边应赋越小的值</p>
<p>将所有边按期望经过次数降序排序后，答案为<br>$$<br>ans = \sum _{i = 1} ^m i \times g[i]<br>$$</p>
<h3 id="Code-3"><a href="#Code-3" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e2</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, deg[N + <span class="number">2</span>], U[N * N + <span class="number">2</span>], V[N * N + <span class="number">2</span>];</span><br><span class="line"><span class="keyword">double</span> f[N + <span class="number">2</span>][N + <span class="number">2</span>], res[N + <span class="number">2</span>], ans, g[N * N + <span class="number">2</span>];</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; E[N + <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Gauss</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="keyword">int</span> cur = i;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">			<span class="keyword">if</span> (<span class="built_in">fabs</span>(f[j][i]) &gt; <span class="built_in">fabs</span>(f[cur][i]))</span><br><span class="line">				cur = j;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">fabs</span>(f[cur][i]) &lt; eps) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="built_in">std</span>::swap(f[i], f[cur]);</span><br><span class="line">		<span class="keyword">double</span> div = f[i][i];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt;= n + <span class="number">1</span>; ++j)</span><br><span class="line">			f[i][j] /= div;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">			<span class="keyword">double</span> div = f[j][i] / f[i][i];</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> k = i; k &lt;= n + <span class="number">1</span>; ++k)</span><br><span class="line">				f[j][k] -= div * f[i][k];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; --i) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">			f[i][n + <span class="number">1</span>] -= res[j] * f[i][j];</span><br><span class="line">		res[i] = f[i][n + <span class="number">1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;U[i], &amp;V[i]);</span><br><span class="line">		++deg[U[i]], ++deg[V[i]];</span><br><span class="line">		E[U[i]].push_back(V[i]), E[V[i]].push_back(U[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	f[<span class="number">1</span>][n + <span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">		f[i][i] = <span class="number">-1</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; (<span class="keyword">int</span>) E[i].size(); ++j)</span><br><span class="line">			f[i][E[i][j]] = <span class="number">1.0</span> / deg[E[i][j]];</span><br><span class="line">		f[i][n] = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	Gauss();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i)</span><br><span class="line">		g[i] = res[U[i]] / (<span class="keyword">double</span>) deg[U[i]] + res[V[i]] / (<span class="keyword">double</span>) deg[V[i]];</span><br><span class="line">	<span class="built_in">std</span>::sort(g + <span class="number">1</span>, g + <span class="number">1</span> + m);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i)</span><br><span class="line">		ans += (m - i + <span class="number">1</span>) * g[i];</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>, ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="USACO10HOL-赶小猪"><a href="#USACO10HOL-赶小猪" class="headerlink" title="[USACO10HOL]赶小猪"></a>[USACO10HOL]赶小猪</h2><h3 id="题面-4"><a href="#题面-4" class="headerlink" title="题面"></a><a href="https://www.luogu.org/problem/P2973" target="_blank" rel="noopener">题面</a></h3><h3 id="Solution-4"><a href="#Solution-4" class="headerlink" title="Solution"></a>Solution</h3><p>考虑类似的做法<br>$$<br>f[i] = \sum _{j | (i, j) \in E} (1 - \frac {p} {q}) \times \frac {f[j]} {deg[j]} + [i== 1]<br>$$<br>答案<br>$$<br>ans[i] = \frac {p} {q} \times f[i]<br>$$</p>
<h3 id="Code-4"><a href="#Code-4" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e2</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, deg[N + <span class="number">2</span>], U[N * N + <span class="number">2</span>], V[N * N + <span class="number">2</span>];</span><br><span class="line"><span class="keyword">double</span> p, q, f[N + <span class="number">2</span>][N + <span class="number">2</span>], res[N + <span class="number">2</span>], ans, g[N * N + <span class="number">2</span>];</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; E[N + <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Gauss</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="keyword">int</span> cur = i;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">			<span class="keyword">if</span> (<span class="built_in">fabs</span>(f[j][i]) &gt; <span class="built_in">fabs</span>(f[cur][i]))</span><br><span class="line">				cur = j;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">fabs</span>(f[cur][i]) &lt; eps) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="built_in">std</span>::swap(f[i], f[cur]);</span><br><span class="line">		<span class="keyword">double</span> div = f[i][i];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt;= n + <span class="number">1</span>; ++j)</span><br><span class="line">			f[i][j] /= div;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">			<span class="keyword">double</span> div = f[j][i] / f[i][i];</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> k = i; k &lt;= n + <span class="number">1</span>; ++k)</span><br><span class="line">				f[j][k] -= div * f[i][k];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; --i) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">			f[i][n + <span class="number">1</span>] -= res[j] * f[i][j];</span><br><span class="line">		res[i] = f[i][n + <span class="number">1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%lf%lf"</span>, &amp;n, &amp;m, &amp;p, &amp;q);</span><br><span class="line">	p /= q;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, u, v; i &lt;= m; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">		++deg[u], ++deg[v];</span><br><span class="line">		E[u].push_back(v), E[v].push_back(u);</span><br><span class="line">	&#125;</span><br><span class="line">	f[<span class="number">1</span>][n + <span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		f[i][i] = <span class="number">-1</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; (<span class="keyword">int</span>) E[i].size(); ++j)</span><br><span class="line">			f[i][E[i][j]] = (<span class="number">1.0</span> - p) / deg[E[i][j]];</span><br><span class="line">	&#125;</span><br><span class="line">	Gauss();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%.9lf\n"</span>, p * res[i]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="HNOI2011-XOR和路径"><a href="#HNOI2011-XOR和路径" class="headerlink" title="[HNOI2011]XOR和路径"></a>[HNOI2011]XOR和路径</h2><h3 id="题面-5"><a href="#题面-5" class="headerlink" title="题面"></a><a href="https://www.luogu.org/problem/P3211" target="_blank" rel="noopener">题面</a></h3><h2 id="Solution-5"><a href="#Solution-5" class="headerlink" title="Solution"></a>Solution</h2><p>比较套路</p>
<p>首先必须明白的一点是，直接做显然行不通<del>你看你都不知道实数下的异或是个啥对吧</del>，但因为异或运算的特殊性，我们可以将每一位分开考虑</p>
<p>$f_i$表示从$i$到$n$路径上这一位的异或期望值，即为$1$的概率，$deg_i$表示度数<br>$$<br>f_i = \frac {1} {deg_i} (\sum _{w(i,j) = 0} f_j + \sum _{w(i,j) = 1}(1 - f_j))<br>$$</p>
<p>$$<br>deg_i \times f_i - \sum _{w(i,j) = 0}f_j + \sum _{w(i,j) = 1}f_j = \sum _{w(i,j) = 1}<br>$$</p>
<p>直接高斯消元，注意不能把$n$号点的贡献算上<br>$$<br>ans = \sum _{i = 0} ^ {30} 2^i \times f_1<br>$$</p>
<h3 id="Code-5"><a href="#Code-5" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, deg[N + <span class="number">5</span>];</span><br><span class="line"><span class="keyword">double</span> a[N + <span class="number">5</span>][N + <span class="number">5</span>], res[N + <span class="number">5</span>], ans;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span> &#123;</span></span><br><span class="line">	<span class="keyword">int</span> v, w;</span><br><span class="line">	Edge(<span class="keyword">int</span> _v = <span class="number">0</span>, <span class="keyword">int</span> _w = <span class="number">0</span>) : v(_v), w(_w) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span> &lt;Edge&gt; E[N + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Gauss</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="keyword">int</span> cur = i;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">			<span class="keyword">if</span> (<span class="built_in">fabs</span>(a[j][i]) &gt; <span class="built_in">fabs</span>(a[cur][i]))</span><br><span class="line">				cur = j;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">fabs</span>(a[cur][i]) &lt; eps) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="built_in">std</span>::swap(a[cur], a[i]);</span><br><span class="line">		<span class="keyword">double</span> div = a[i][i];</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt;= n + <span class="number">1</span>; ++j)</span><br><span class="line">			a[i][j] /= div;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">			<span class="keyword">double</span> div = a[j][i] / a[i][i];</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> k = i; k &lt;= n + <span class="number">1</span>; ++k)</span><br><span class="line">				a[j][k] -= div * a[i][k];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; --i) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">			a[i][n + <span class="number">1</span>] -= a[i][j] * res[j];</span><br><span class="line">		res[i] = a[i][n + <span class="number">1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, u, v, w; i &lt;= m; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">		E[u].push_back(Edge(v, w));</span><br><span class="line">		++deg[u];</span><br><span class="line">		<span class="keyword">if</span> (u != v) &#123;</span><br><span class="line">			E[v].push_back(Edge(u, w));</span><br><span class="line">			++deg[v];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">30</span>; ++i) &#123;</span><br><span class="line">		<span class="built_in">std</span>::<span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span>(a));</span><br><span class="line">		<span class="built_in">std</span>::<span class="built_in">memset</span>(res, <span class="number">0</span>, <span class="keyword">sizeof</span>(res));</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; ++j) &#123;</span><br><span class="line">			a[j][j] = (<span class="keyword">double</span>)deg[j];</span><br><span class="line">			<span class="keyword">for</span> (Edge e : E[j]) &#123;</span><br><span class="line">				<span class="keyword">if</span> (!((e.w &gt;&gt; i) &amp; <span class="number">1</span>)) a[j][e.v] -= <span class="number">1</span>;</span><br><span class="line">				<span class="keyword">else</span> &#123;</span><br><span class="line">					a[j][e.v] += <span class="number">1</span>;</span><br><span class="line">					a[j][n + <span class="number">1</span>] += <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		a[n][n] = <span class="number">1</span>;</span><br><span class="line">		Gauss();</span><br><span class="line">		ans += (<span class="number">1</span> &lt;&lt; i) * res[<span class="number">1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>, ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="神仙题"><a href="#神仙题" class="headerlink" title="神仙题"></a>神仙题</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote>
<p>“德克萨斯那家伙能活得那么潇洒，可多亏了有我罩着她，这不是明摆着的事情嘛 ”</p>
</blockquote>
<p>$\text{Texas}$和$\text{Exusiai}$两个人正在玩一个游戏，游戏有$n$种不同的关卡可以挑战，每次挑战需要消耗 1 点理智。对于关卡$i(1 ≤ i ≤ n)$，每个人都有相同的概率$p_i$成功完成任务并获得$1$点积分，有$1 − p_i$的概率行动失败不能获得任何奖励。两人的策略是使用所有理智每次等概率随机一个关卡挑战。现在$\text{Texas}$有$A$点理智，$\text{Exusiai}$有$B$点理智，他们想知道在两人的所有理智用完之后，$\text{Exusiai}$ 的积分严格大于$\text{Texas}$的概率模$10000019$ 意义下的值。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>$1 \le n, A \le 5 \times 10 ^ 6, 1 \le B \le 10 ^ {18}$</p>
<h3 id="Solution-6"><a href="#Solution-6" class="headerlink" title="Solution"></a>Solution</h3><p>每轮胜利的概率为$P$，这个可以一开始就轻松求出</p>
<p>枚举$\text {Texas}$的得分$i$，恰好得$i$分的概率为<br>$$<br>P_i = \binom {A} {i} \cdot P ^ i \cdot (1 - P) ^ {A - i}<br>$$<br>$\text{Exusiai}$恰好得$i$分的概率为<br>$$<br>Q_i = \binom {B} {i} \cdot P ^ i \cdot (1 - P) ^ {B - i}<br>$$<br>那么$\text {Exusiai}$得至少$i + 1$分的概率为<br>$$<br>1 - \sum ^ i _ {j = 0} Q_j<br>$$<br>由于$\displaystyle\binom {B} {i}$不太好算$(A \le 5 \times 10^6)$，我们只能线性维护它</p>
<p>那么答案为<br>$$<br>\sum _{i = 0} ^{\min(A, B)} P_i \cdot(1 - \sum _{j = 0} ^i Q_j)<br>$$</p>
<h3 id="Code-6"><a href="#Code-6" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x = <span class="number">0</span>; <span class="keyword">char</span> c = getchar();</span><br><span class="line">	<span class="keyword">for</span> (; c &lt; <span class="number">48</span> || c &gt; <span class="number">57</span>; c = getchar());</span><br><span class="line">	<span class="keyword">for</span> (; c &gt;= <span class="number">48</span> &amp;&amp; c &lt;= <span class="number">57</span>; c = getchar()) x = x * <span class="number">10</span> + (c ^ <span class="number">48</span>);</span><br><span class="line">	<span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e6</span>, Mod = <span class="number">1e7</span> + <span class="number">19</span>;</span><br><span class="line"><span class="keyword">int</span> n, A, B, p[N + <span class="number">5</span>], fac[N + <span class="number">5</span>], ifac[N + <span class="number">5</span>], pow1[N + <span class="number">5</span>], pow2[N + <span class="number">5</span>], inv[N + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (; y; x = x * x % Mod, y &gt;&gt;= <span class="number">1</span>)</span><br><span class="line">		<span class="keyword">if</span> (y &amp; <span class="number">1</span>) res = res * x % Mod;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Inv</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> qpow(x, Mod - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> fac[n] * ifac[m] % Mod * ifac[n - m] % Mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	n = read(), A = read(), B = read();</span><br><span class="line">	<span class="keyword">int</span> P = <span class="number">0</span>, Invn = Inv(n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="keyword">int</span> p = read();</span><br><span class="line">		P = (P + Invn * p) % Mod;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> Q = (<span class="number">1</span> + Mod - P) % Mod, InvQ = Inv(Q);</span><br><span class="line">	fac[<span class="number">0</span>] = pow1[<span class="number">0</span>] = pow2[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= A; ++i) &#123;</span><br><span class="line">		fac[i] = fac[i - <span class="number">1</span>] * i % Mod;</span><br><span class="line">		pow1[i] = pow1[i - <span class="number">1</span>] * P % Mod;</span><br><span class="line">		pow2[i] = pow2[i - <span class="number">1</span>] * Q % Mod;</span><br><span class="line">		inv[i] = i == <span class="number">1</span> ? <span class="number">1</span> : (Mod - Mod / i) * inv[Mod % i] % Mod;</span><br><span class="line">	&#125;</span><br><span class="line">	ifac[A] = Inv(fac[A]);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = A; i &gt;= <span class="number">1</span>; --i)</span><br><span class="line">		ifac[i - <span class="number">1</span>] = ifac[i] * i % Mod;</span><br><span class="line">	<span class="keyword">int</span> sum = <span class="number">0</span>, ans = <span class="number">0</span>, c = <span class="number">1</span>, pq = qpow(Q, B);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="built_in">std</span>::min(A, B); ++i) &#123;</span><br><span class="line">		<span class="keyword">int</span> tmp = C(A, i) * pow1[i] % Mod * pow2[A - i] % Mod, ttmp = c * pq % Mod;</span><br><span class="line">		sum = (sum + ttmp) % Mod;</span><br><span class="line">		ans = (ans + tmp * (<span class="number">1</span> + Mod - sum) % Mod) % Mod;</span><br><span class="line">		c = (B - i) % Mod * c % Mod * inv[i + <span class="number">1</span>] % Mod;</span><br><span class="line">		pq = pq * InvQ % Mod * P % Mod;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>算法&amp;&amp;学习笔记</category>
      </categories>
      <tags>
        <tag>概率与期望</tag>
      </tags>
  </entry>
  <entry>
    <title>计算几何模板</title>
    <url>/2019/09/28/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<p>慢慢填</p>
<a id="more"></a>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Vector Point</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Vec std::vector</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sqr(x) ((x) * (x))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-10</span>, pi = <span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Sgn</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x &lt; -eps ? <span class="number">-1</span> : x &gt; eps;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">	<span class="keyword">double</span> x, y;</span><br><span class="line">	Point() &#123;&#125;</span><br><span class="line">	Point(<span class="keyword">double</span> _x, <span class="keyword">double</span> _y) : x(_x), y(_y) &#123;&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">input</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>, &amp;x, &amp;y);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">output</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%.2lf %.2lf\n"</span>, x, y);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span> ==(<span class="keyword">const</span> Point &amp;a, <span class="keyword">const</span> Point &amp;b) &#123;</span><br><span class="line">		<span class="keyword">return</span> Sgn(a.x - b.x) == <span class="number">0</span> &amp;&amp; Sgn(a.y - b.y) == <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span> !=(<span class="keyword">const</span> Point &amp;a, <span class="keyword">const</span> Point &amp;b) &#123;</span><br><span class="line">		<span class="keyword">return</span> a == b ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span> &lt;(<span class="keyword">const</span> Point &amp;a, <span class="keyword">const</span> Point &amp;b) &#123;</span><br><span class="line">		<span class="keyword">return</span> Sgn(a.x - b.x) &lt; <span class="number">0</span> || Sgn(a.x - b.x) == <span class="number">0</span> &amp;&amp; Sgn(a.y - b.y) &lt; <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">inline</span> <span class="keyword">friend</span> Vector <span class="keyword">operator</span> +(<span class="keyword">const</span> Vector &amp;a, <span class="keyword">const</span> Vector &amp;b) &#123;</span><br><span class="line">		<span class="keyword">return</span> Vector(a.x + b.x, a.y + b.y);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">inline</span> <span class="keyword">friend</span> Vector <span class="keyword">operator</span> -(<span class="keyword">const</span> Vector &amp;a, <span class="keyword">const</span> Vector &amp;b) &#123;</span><br><span class="line">		<span class="keyword">return</span> Vector(a.x - b.x, a.y - b.y);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keyword">double</span> <span class="keyword">operator</span> *(<span class="keyword">const</span> Vector &amp;a, <span class="keyword">const</span> Vector &amp;b) &#123;</span><br><span class="line">		<span class="keyword">return</span> a.x * b.y - a.y * b.x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">inline</span> <span class="keyword">friend</span> Vector <span class="keyword">operator</span> *(<span class="keyword">const</span> Vector &amp;a, <span class="keyword">double</span> t) &#123;</span><br><span class="line">		<span class="keyword">return</span> Vector(a.x * t, a.y * t);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">inline</span> <span class="keyword">friend</span> Vector <span class="keyword">operator</span> /(<span class="keyword">const</span> Vector &amp;a, <span class="keyword">double</span> t) &#123;</span><br><span class="line">		<span class="keyword">return</span> Vector(a.x / t, a.y / t);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keyword">double</span> <span class="title">dot</span><span class="params">(<span class="keyword">const</span> Point &amp;a, <span class="keyword">const</span> Point &amp;b)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> a.x * b.x + a.y * b.y;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keyword">double</span> <span class="title">dis</span><span class="params">(<span class="keyword">const</span> Point &amp;a, <span class="keyword">const</span> Point &amp;b)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">sqrt</span>(sqr(a.x - b.x) + sqr(a.y - b.y));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keyword">double</span> <span class="title">dis2</span><span class="params">(<span class="keyword">const</span> Point &amp;a, <span class="keyword">const</span> Point &amp;b)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> sqr(a.x - b.x) + sqr(a.y - b.y);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">len</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">sqrt</span>(sqr(x) + sqr(y));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">len2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> sqr(x) + sqr(y);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 逆时针转 theta 度</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> Vector <span class="title">rotate</span><span class="params">(<span class="keyword">double</span> the)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">double</span> Sin = <span class="built_in">sin</span>(the), Cos = <span class="built_in">cos</span>(the);</span><br><span class="line">		<span class="keyword">return</span> Vector(x * Cos - y * Sin, x * Sin + y * Cos);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// b 绕 a 逆时针转 theta 度</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">friend</span> Point <span class="title">rotate</span><span class="params">(<span class="keyword">const</span> Point &amp;a, <span class="keyword">const</span> Point &amp;b, <span class="keyword">double</span> the)</span> </span>&#123;</span><br><span class="line">		Vector tmp = (b - a).rotate(the);</span><br><span class="line">		<span class="keyword">return</span> a + tmp;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> Vector <span class="title">Left</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Vector(-y, x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> Vector <span class="title">Right</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Vector(y, -x);</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="comment">// 四边形</span></span><br><span class="line">	<span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keyword">double</span> _Area(<span class="keyword">const</span> Vector &amp;a, <span class="keyword">const</span> Vector &amp;b) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">fabs</span>(a * b);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 三角形</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keyword">double</span> <span class="title">Area</span><span class="params">(<span class="keyword">const</span> Vector &amp;a, <span class="keyword">const</span> Vector &amp;b, <span class="keyword">const</span> Vector &amp;c)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> _Area(a - c, b - c) / <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 分点: ACB共线, |AC| : |CB| = l1 : l2, 则C = (A * l2 + B * l1) / (l1 + l2)</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">friend</span> Point <span class="title">Div</span><span class="params">(<span class="keyword">const</span> Point &amp;a, <span class="keyword">const</span> Point &amp;b, <span class="keyword">double</span> l1, <span class="keyword">double</span> l2)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> ((a * l2 + b * l1) / (l1 + l2));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">friend</span> Point <span class="title">Mid</span><span class="params">(<span class="keyword">const</span> Point &amp;a, <span class="keyword">const</span> Point &amp;b)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> Div(a, b, <span class="number">1.0</span>, <span class="number">1.0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Line</span> &#123;</span></span><br><span class="line">	Point a, b;</span><br><span class="line">	Line() &#123;&#125;</span><br><span class="line">	<span class="comment">// 两点式</span></span><br><span class="line">	Line(Point _a, Point _b) : a(_a), b(_b) &#123;&#125;</span><br><span class="line">	<span class="comment">// 点斜式</span></span><br><span class="line">	Line(Point p, <span class="keyword">double</span> angle) &#123;</span><br><span class="line">		a = p;</span><br><span class="line">		<span class="keyword">if</span> (Sgn(angle - pi / <span class="number">2</span>) == <span class="number">0</span>) a + Point(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">		<span class="keyword">else</span> a + Point(<span class="number">1</span>, <span class="built_in">tan</span>(angle));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 一般式</span></span><br><span class="line">	Line(<span class="keyword">double</span> _a, <span class="keyword">double</span> _b, <span class="keyword">double</span> _c) &#123;</span><br><span class="line">		<span class="keyword">if</span> (Sgn(_a) == <span class="number">0</span>) &#123;</span><br><span class="line">			a = Point(<span class="number">0</span>, -_c / _b);</span><br><span class="line">			b = Point(<span class="number">1</span>, -_c / _b);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (Sgn(_b) == <span class="number">0</span>) &#123;</span><br><span class="line">			a = Point(-_c / _a, <span class="number">0</span>);</span><br><span class="line">			b = Point(-_c / _b, <span class="number">1</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			a = Point(<span class="number">0</span>, -_c / _b);</span><br><span class="line">			b = Point(<span class="number">1</span>, (-_a - _c) / _b);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">input</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		a.input(), b.input();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 线段长</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">length</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> dis(a, b);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">angle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">double</span> the = <span class="built_in">atan2</span>(b.y - a.y, b.x - a.x);</span><br><span class="line">		<span class="keyword">if</span> (Sgn(the) &lt; <span class="number">0</span>) the += pi;</span><br><span class="line">		<span class="keyword">if</span> (Sgn(the - pi) == <span class="number">0</span>) the -= pi;</span><br><span class="line">		<span class="keyword">return</span> the;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">PointonLine</span><span class="params">(Point p)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> Sgn((p - a) * (b - a)) == <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">PointonSeg</span><span class="params">(Point p)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> PointonLine(p) &amp;&amp; Sgn(dot(p - a, p - b)) &lt;= <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 平行</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="title">Parallal</span><span class="params">(<span class="keyword">const</span> Line &amp;x, <span class="keyword">const</span> Line &amp;y)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> Sgn((x.b - x.a) * (y.b - y.a)) == <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 垂直</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="title">Vertical</span><span class="params">(<span class="keyword">const</span> Line &amp;x, <span class="keyword">const</span> Line &amp;y)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> Sgn(dot(x.b - x.a, y.b - y.a)) == <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 点到直线距离</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">disLine</span><span class="params">(<span class="keyword">const</span> Point &amp;p)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">fabs</span>((p - a) * (b - a)) / length();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 点到线段距离</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">disSeg</span><span class="params">(<span class="keyword">const</span> Point &amp;p)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (Sgn(dot(p - a, b - a)) &lt; <span class="number">0</span> || Sgn(dot(p - b, a - b)) &lt; <span class="number">0</span>)</span><br><span class="line">			<span class="keyword">return</span> <span class="built_in">std</span>::min(dis(a, p), dis(b, p));</span><br><span class="line">		<span class="keyword">return</span> disLine(p);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/* 0:平行 1:在逆时针 2:在顺时针*/</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">relation</span><span class="params">(<span class="keyword">const</span> Point &amp;p)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> c = Sgn((p - a) * (b - a));</span><br><span class="line">		<span class="keyword">if</span> (c &gt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 直线交点: 根据有向面积比算出|AO|:|OB|, 使用分点计算O</span></span><br><span class="line">	<span class="comment">// 注意A与B叉积计算顺序相反</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">friend</span> Point <span class="title">Inter</span><span class="params">(<span class="keyword">const</span> Line &amp;x, <span class="keyword">const</span> Line &amp;y)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> Div(x.a, x.b, (y.b - x.a) * (y.a - x.a), (y.a - x.b) * (y.b - x.b));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Circle</span> &#123;</span></span><br><span class="line">	Point p;</span><br><span class="line">	<span class="keyword">double</span> r;</span><br><span class="line">	Circle() &#123;&#125;</span><br><span class="line">	Circle(Point _p, <span class="keyword">double</span> _r) : p(_p), r(_r) &#123;&#125;</span><br><span class="line">	Circle(<span class="keyword">double</span> _x, <span class="keyword">double</span> _y, <span class="keyword">double</span> _r) : p(Point(_x, _y)), r(_r) &#123;&#125;</span><br><span class="line">	Circle(<span class="keyword">const</span> Point &amp;a, <span class="keyword">const</span> Point &amp;b, <span class="keyword">const</span> Point &amp;c) &#123;</span><br><span class="line">        Point M1 = Mid(a, b), M2 = Mid(a, c);</span><br><span class="line">        p = Inter(Line(M1, M1 + (M1 - a).Left()), Line(M2, M2 + (M2 - a).Left()));</span><br><span class="line">        r = dis(p, a);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">input</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		p.input(), <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;r);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/* 0:相离  1:相交  2:a内含于b */</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">friend</span> <span class="keyword">int</span> <span class="title">relationCircle</span><span class="params">(<span class="keyword">const</span> Circle &amp;a, <span class="keyword">const</span> Circle &amp;b)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">double</span> d = dis(a.p, b.p);</span><br><span class="line">		<span class="keyword">if</span> (Sgn(a.r + b.r - d) &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">double</span> l = b.r - a.r;</span><br><span class="line">		<span class="keyword">if</span> (Sgn(l - d) &gt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/* 0:在圆外  1:在圆上  2:在圆内 */</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">relationPoint</span><span class="params">(<span class="keyword">const</span> Point &amp;a)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">double</span> d = dis(p, a);</span><br><span class="line">		<span class="keyword">int</span> c = Sgn(d - r);</span><br><span class="line">		<span class="keyword">if</span> (c &gt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Polygon</span> &#123;</span></span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	Vec&lt;Point&gt; p;</span><br><span class="line">	Vec&lt;Line&gt; l;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">input</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n), p.resize(n);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) p[i].input();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Get_Line</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) l.push_back(Line(p[i], p[(i + <span class="number">1</span>) % n]));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 周长</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Circ</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">double</span> res = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) res += dis(p[i], p[(i + <span class="number">1</span>) % n]);</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 面积</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Area</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">double</span> res = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) res += _Area(p[i], p[(i + <span class="number">1</span>) % n]);</span><br><span class="line">		<span class="keyword">return</span> res / <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 极角序</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">cmp_pol</span> &#123;</span></span><br><span class="line">		Point p;</span><br><span class="line">		cmp_pol(<span class="keyword">const</span> Point &amp;_p) &#123;</span><br><span class="line">			p = _p;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span> <span class="params">(<span class="keyword">const</span> Point &amp;a, <span class="keyword">const</span> Point &amp;b)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">int</span> d = Sgn((a - p) * (b - p));</span><br><span class="line">			<span class="keyword">return</span> d != <span class="number">0</span> ? d &gt; <span class="number">0</span> : Sgn(dis(p, a) - dis(p, b)) &lt; <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">	<span class="comment">// 凸包</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">GetConvex</span><span class="params">(Polygon &amp;Con)</span> </span>&#123;</span><br><span class="line">		<span class="built_in">std</span>::sort(p.begin(), p.end());</span><br><span class="line">		Con.n = n, Con.p.resize(n &lt;&lt; <span class="number">1</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">std</span>::min(n, <span class="number">2</span>); ++i) Con.p[i] = p[i];</span><br><span class="line">		<span class="keyword">if</span> (n &lt;= <span class="number">2</span>) <span class="keyword">return</span>;</span><br><span class="line">		<span class="keyword">int</span> &amp;top = Con.n = <span class="number">1</span>;<span class="comment">// 为了排除左端点相同, top表示的是 (总点数-1)</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; ++i) &#123;</span><br><span class="line">			<span class="keyword">while</span> (top &amp;&amp; Sgn((p[i] - Con.p[top]) * (Con.p[top] - Con.p[top - <span class="number">1</span>])) &gt;= <span class="number">0</span>) --top;</span><br><span class="line">			Con.p[++top] = p[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> tmp = top;</span><br><span class="line">		Con.p[++top] = p[n - <span class="number">2</span>];<span class="comment">// 为了排除右端点相同, 第二次扫描开始前只要加倒数第二个点进去</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">3</span>; ~i; --i) &#123;</span><br><span class="line">			<span class="keyword">while</span> (top != tmp &amp;&amp; Sgn((p[i] - Con.p[top]) * (Con.p[top] - Con.p[top - <span class="number">1</span>])) &gt;= <span class="number">0</span>) --top;</span><br><span class="line">			Con.p[++top] = p[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/* 0: 点上  1:边上  2:内部  3:外部 */</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">relationPoint</span><span class="params">(<span class="keyword">const</span> Point q)</span> </span>&#123;&#125;</span><br><span class="line">	<span class="comment">// 最小圆覆盖</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> Circle <span class="title">MinCircleCover</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		srand(time(<span class="literal">NULL</span>));</span><br><span class="line">		<span class="built_in">std</span>::random_shuffle(p.begin(), p.end());</span><br><span class="line">		Circle res = Circle(p[<span class="number">0</span>], <span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i)</span><br><span class="line">			<span class="keyword">if</span> (res.relationPoint(p[i]) == <span class="number">0</span>) &#123;</span><br><span class="line">				res = Circle(p[i], <span class="number">0</span>);</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; ++j)</span><br><span class="line">					<span class="keyword">if</span> (res.relationPoint(p[j]) == <span class="number">0</span>) &#123;</span><br><span class="line">						res.p = Mid(p[i], p[j]);</span><br><span class="line">                        res.r = dis(res.p, p[j]);</span><br><span class="line">						<span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; j; ++k)</span><br><span class="line">							<span class="keyword">if</span> (res.relationPoint(p[k]) == <span class="number">0</span>)</span><br><span class="line">                                res = Circle(p[i], p[j], p[k]);</span><br><span class="line">					&#125;</span><br><span class="line">			&#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 旋转卡壳求凸多边形直径</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Diameter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (n == <span class="number">2</span>) <span class="keyword">return</span> dis2(p[<span class="number">0</span>], p[<span class="number">1</span>]);</span><br><span class="line">		<span class="keyword">int</span> q = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">double</span> res = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">			<span class="keyword">while</span> (Sgn(l[i].disLine(p[q]) - l[i].disLine(p[(q + <span class="number">1</span>) % n])) &lt;= <span class="number">0</span>) q = (q + <span class="number">1</span>) % n;</span><br><span class="line">			res = <span class="built_in">std</span>::max(res, <span class="built_in">std</span>::max(dis2(p[i], p[q]), dis2(p[(i + <span class="number">1</span>) % n], p[q])));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Polygon G, Con;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">// freopen("1.in", "r", stdin);</span></span><br><span class="line">	<span class="comment">// freopen("1.out", "w", stdout);</span></span><br><span class="line">	G.input();</span><br><span class="line">	G.GetConvex(Con);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>, Con.Circ());</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>算法&amp;&amp;学习笔记</category>
      </categories>
      <tags>
        <tag>计算几何</tag>
      </tags>
  </entry>
</search>
